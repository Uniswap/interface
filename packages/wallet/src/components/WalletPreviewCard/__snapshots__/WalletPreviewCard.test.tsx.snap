// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders wallet preview card 1`] = `
[
  <View
    cancelable={true}
    disabled={false}
    focusable={true}
    hitSlop={[Function]}
    minPressDuration={0}
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onPress={[Function]}
    onPressIn={[Function]}
    onPressOut={[Function]}
    style={
      {
        "backgroundColor": {
          "dynamic": {
            "dark": "#131313",
            "light": "#FFFFFF",
          },
        },
        "borderBottomColor": {
          "dynamic": {
            "dark": "rgba(255,255,255,0.12)",
            "light": "rgba(34,34,34,0.05)",
          },
        },
        "borderBottomLeftRadius": 20,
        "borderBottomRightRadius": 20,
        "borderBottomWidth": 1,
        "borderLeftColor": {
          "dynamic": {
            "dark": "rgba(255,255,255,0.12)",
            "light": "rgba(34,34,34,0.05)",
          },
        },
        "borderLeftWidth": 1,
        "borderRightColor": {
          "dynamic": {
            "dark": "rgba(255,255,255,0.12)",
            "light": "rgba(34,34,34,0.05)",
          },
        },
        "borderRightWidth": 1,
        "borderStyle": "solid",
        "borderTopColor": {
          "dynamic": {
            "dark": "rgba(255,255,255,0.12)",
            "light": "rgba(34,34,34,0.05)",
          },
        },
        "borderTopLeftRadius": 20,
        "borderTopRightRadius": 20,
        "borderTopWidth": 1,
        "flexDirection": "column",
        "minHeight": 72,
        "opacity": 1,
        "paddingBottom": 12,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 12,
        "shadowColor": "rgb(0,0,0)",
        "shadowOffset": {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0.05,
        "shadowRadius": 8,
        "transform": [
          {
            "scale": 1,
          },
        ],
      }
    }
  >
    <View
      style={
        {
          "alignContent": "center",
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "row",
          "justifyContent": "space-between",
        }
      }
    >
      <View
        onLayout={[Function]}
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
            "flexShrink": 1,
            "gap": 12,
          }
        }
      >
        <View
          style={
            {
              "backgroundColor": {
                "dynamic": {
                  "dark": "transparent",
                  "light": "transparent",
                },
              },
              "borderBottomColor": {
                "dynamic": {
                  "dark": "transparent",
                  "light": "transparent",
                },
              },
              "borderBottomLeftRadius": 999999,
              "borderBottomRightRadius": 999999,
              "borderBottomWidth": 0,
              "borderLeftColor": {
                "dynamic": {
                  "dark": "transparent",
                  "light": "transparent",
                },
              },
              "borderLeftWidth": 0,
              "borderRightColor": {
                "dynamic": {
                  "dark": "transparent",
                  "light": "transparent",
                },
              },
              "borderRightWidth": 0,
              "borderStyle": "solid",
              "borderTopColor": {
                "dynamic": {
                  "dark": "transparent",
                  "light": "transparent",
                },
              },
              "borderTopLeftRadius": 999999,
              "borderTopRightRadius": 999999,
              "borderTopWidth": 0,
              "flexDirection": "column",
              "position": "relative",
            }
          }
          testID="account-icon"
        >
          <svg
            height={36}
            viewBox="0 0 36 36"
            width={36}
            xmlns="http://www.w3.org/2000/svg"
          >
            <g
              style={
                {
                  "transformOrigin": "center center",
                }
              }
            >
              <circle
                cx={18}
                cy={18}
                fill="#00C3A01F"
                r={18}
              />
              <g
                transform="translate(6, 6) scale(0.5)"
              >
                <path
                  clipRule="evenodd"
                  d="M20.9454 0.0175773C22.4936 -0.167833 23.763 1.13917 23.763 2.72944V21.3625C23.763 22.9527 22.4993 24.2419 20.9405 24.2419L2.67549 24.2419C1.11665 24.2419 -0.16452 22.9469 0.0172307 21.3675C1.30306 10.1936 9.99222 1.32931 20.9454 0.0175773Z"
                  fill="#00C3A0"
                  fillRule="evenodd"
                />
                <path
                  clipRule="evenodd"
                  d="M27.0546 47.9824C25.5064 48.1678 24.237 46.8608 24.237 45.2706V26.6375C24.237 25.0473 25.5007 23.7581 27.0595 23.7581L45.3245 23.7581C46.8833 23.7581 48.1645 25.0531 47.9828 26.6325C46.6969 37.8064 38.0078 46.6707 27.0546 47.9824Z"
                  fill="#00C3A0"
                  fillRule="evenodd"
                />
              </g>
            </g>
          </svg>
        </View>
        <View
          style={
            {
              "flexDirection": "column",
              "flexShrink": 1,
              "gap": 0,
            }
          }
        >
          <View
            style={
              {
                "flexDirection": "row",
                "gap": 12,
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "flexShrink": 1,
                  "gap": 4,
                }
              }
            >
              <Text
                adjustsFontSizeToFit={true}
                allowFontScaling={false}
                ellipsizeMode="tail"
                maxFontSizeMultiplier={1.4}
                numberOfLines={1}
                style={
                  {
                    "color": {
                      "dynamic": {
                        "dark": "#FFFFFF",
                        "light": "#131313",
                      },
                    },
                    "flexShrink": 1,
                    "fontFamily": "Basel Grotesk",
                    "fontSize": 18,
                    "fontWeight": "400",
                    "lineHeight": 23.400000000000002,
                  }
                }
                suppressHighlighting={true}
                testID="address-display/name/0x​82D5...3Fa6"
              >
                0x​82D5...3Fa6
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          {
            "flexDirection": "row",
            "gap": 8,
            "paddingLeft": 12,
            "paddingRight": 4,
          }
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={20}
          bbWidth={20}
          fill="none"
          focusable={false}
          meetOrSlice={0}
          minX={0}
          minY={0}
          stroke="currentColor"
          strokeLinecap="round"
          strokeWidth={6}
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              {
                "color": "#FF37C7",
                "height": 20,
                "width": 20,
              },
              {
                "flex": 0,
                "height": 20,
                "width": 20,
              },
            ]
          }
          vbHeight={48}
          vbWidth={48}
        >
          <RNSVGGroup
            color="#FF37C7"
            fill={null}
            propList={
              [
                "fill",
                "stroke",
                "strokeWidth",
                "strokeLinecap",
              ]
            }
            stroke={
              {
                "type": 2,
              }
            }
            strokeLinecap={1}
            strokeWidth={6}
          >
            <RNSVGLine
              fill={
                {
                  "payload": 4278190080,
                  "type": 0,
                }
              }
              propList={
                [
                  "stroke",
                ]
              }
              stroke={
                {
                  "type": 2,
                }
              }
              x1="11"
              x2="18"
              y1="26"
              y2="33"
            />
            <RNSVGLine
              fill={
                {
                  "payload": 4278190080,
                  "type": 0,
                }
              }
              propList={
                [
                  "stroke",
                ]
              }
              stroke={
                {
                  "type": 2,
                }
              }
              x1="18"
              x2="38"
              y1="33"
              y2="14"
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>,
  <div
    style={
      {
        "display": "contents",
      }
    }
  />,
]
`;
