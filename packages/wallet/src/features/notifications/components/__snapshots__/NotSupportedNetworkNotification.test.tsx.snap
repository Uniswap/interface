// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NotSupportedNetworkNotification renders without error 1`] = `
<View
  collapsable={false}
  forwardedRef={[Function]}
  handlerTag={1}
  handlerType="FlingGestureHandler"
  jestAnimatedStyle={
    {
      "value": {
        "transform": [
          {
            "translateY": -150,
          },
        ],
      },
    }
  }
  onGestureHandlerEvent={[Function]}
  pointerEvents="box-none"
  style={
    {
      "alignItems": "center",
      "borderBottomLeftRadius": 16,
      "borderBottomRightRadius": 16,
      "borderTopLeftRadius": 16,
      "borderTopRightRadius": 16,
      "flexDirection": "column",
      "justifyContent": "center",
      "position": "absolute",
      "top": 0,
      "transform": [
        {
          "translateY": -150,
        },
      ],
      "width": "100%",
      "zIndex": 1060,
    }
  }
>
  <View
    pointerEvents="auto"
    style={
      {
        "borderBottomColor": "rgba(34,34,34,0.05)",
        "borderBottomLeftRadius": 999999,
        "borderBottomRightRadius": 999999,
        "borderBottomWidth": 1,
        "borderLeftColor": "rgba(34,34,34,0.05)",
        "borderLeftWidth": 1,
        "borderRightColor": "rgba(34,34,34,0.05)",
        "borderRightWidth": 1,
        "borderStyle": "solid",
        "borderTopColor": "rgba(34,34,34,0.05)",
        "borderTopLeftRadius": 999999,
        "borderTopRightRadius": 999999,
        "borderTopWidth": 1,
        "flexDirection": "column",
        "marginLeft": "auto",
        "marginRight": "auto",
        "shadowColor": "rgb(0,0,0)",
        "shadowOffset": {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.0196078431372549,
        "shadowRadius": 6,
      }
    }
  >
    <View
      pointerEvents="box-none"
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "flexShrink": 1,
          "justifyContent": "center",
        }
      }
    >
      <View
        cancelable={true}
        disabled={false}
        focusable={true}
        hitSlop={[Function]}
        minPressDuration={0}
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onPress={[Function]}
        onPressIn={[Function]}
        onPressOut={[Function]}
        style={
          {
            "backgroundColor": "#FFFFFF",
            "borderBottomLeftRadius": 999999,
            "borderBottomRightRadius": 999999,
            "borderTopLeftRadius": 999999,
            "borderTopRightRadius": 999999,
            "flexDirection": "column",
            "opacity": 1,
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "transform": [
              {
                "scale": 1,
              },
            ],
          }
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "gap": 8,
              "justifyContent": "flex-start",
              "paddingRight": 4,
            }
          }
        >
          <View
            style={
              {
                "flexDirection": "column",
              }
            }
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight={20}
              bbWidth={20}
              fill="currentColor"
              focusable={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              strokeWidth={8}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  {
                    "color": "#7D7D7D",
                    "height": 20,
                    "width": 20,
                  },
                  {
                    "flex": 0,
                    "height": 20,
                    "width": 20,
                  },
                ]
              }
              tintColor="#7D7D7D"
              vbHeight={24}
              vbWidth={24}
            >
              <RNSVGGroup
                fill={
                  {
                    "type": 2,
                  }
                }
                propList={
                  [
                    "fill",
                    "strokeWidth",
                  ]
                }
                strokeWidth={8}
              >
                <RNSVGPath
                  d="M21.6074 17.1522L15.0004 4.79599C13.7204 2.40199 10.2814 2.40199 9.00042 4.79599L2.39349 17.1522C1.21949 19.3482 2.81353 22.0001 5.30853 22.0001H18.6923C21.1863 22.0001 22.7814 19.3472 21.6074 17.1522ZM11.2504 10.0001C11.2504 9.58609 11.5864 9.25009 12.0004 9.25009C12.4144 9.25009 12.7504 9.58609 12.7504 10.0001V14.0001C12.7504 14.4141 12.4144 14.7501 12.0004 14.7501C11.5864 14.7501 11.2504 14.4141 11.2504 14.0001V10.0001ZM12.0204 18.0001C11.4684 18.0001 11.0153 17.5521 11.0153 17.0001C11.0153 16.4481 11.4584 16.0001 12.0104 16.0001H12.0204C12.5734 16.0001 13.0204 16.4481 13.0204 17.0001C13.0204 17.5521 12.5724 18.0001 12.0204 18.0001Z"
                  fill={
                    {
                      "type": 2,
                    }
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                />
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
          <Text
            adjustsFontSizeToFit={true}
            allowFontScaling={false}
            maxFontSizeMultiplier={1.4}
            numberOfLines={1}
            style={
              {
                "color": "#222222",
                "fontFamily": "Basel Grotesk",
                "fontSize": 16,
                "fontWeight": "400",
                "lineHeight": 24,
              }
            }
            suppressHighlighting={true}
            testID="notification-toast-title"
          >
            Unsupported network
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;
