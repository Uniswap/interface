// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BackButton renders without error 1`] = `
<View
  collapsable={false}
  dd-action-name="back"
  focusVisibleStyle={{}}
  forwardedRef={[Function]}
  hitSlop={24}
  jestAnimatedStyle={
    {
      "value": {},
    }
  }
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  role="button"
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderBottomLeftRadius": 12,
      "borderBottomRightRadius": 12,
      "borderTopLeftRadius": 12,
      "borderTopRightRadius": 12,
      "flexDirection": "column",
      "opacity": 1,
      "transform": [
        {
          "scale": 1,
        },
      ],
    }
  }
  testID="back"
>
  <View
    onBlur={[Function]}
    onFocus={[Function]}
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "gap": 8,
      }
    }
  >
    <View
      collapsable={false}
      forwardedRef={[Function]}
      jestAnimatedStyle={
        {
          "value": {
            "borderBottomLeftRadius": 999999,
            "borderBottomRightRadius": 999999,
            "borderTopLeftRadius": 999999,
            "borderTopRightRadius": 999999,
            "transform": [
              {
                "rotate": "0deg",
              },
            ],
          },
        }
      }
      onBlur={[Function]}
      onFocus={[Function]}
      style={
        {
          "alignItems": "center",
          "borderBottomLeftRadius": 999999,
          "borderBottomRightRadius": 999999,
          "borderTopLeftRadius": 999999,
          "borderTopRightRadius": 999999,
          "flexDirection": "column",
          "justifyContent": "center",
          "transform": [
            {
              "rotate": "0deg",
            },
          ],
        }
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={24}
        bbWidth={24}
        fill="none"
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        strokeWidth={8}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            {
              "color": "#222222",
              "height": 24,
              "width": 24,
            },
            {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          color="#222222"
          fill={null}
          propList={
            [
              "fill",
              "strokeWidth",
            ]
          }
          strokeWidth={8}
        >
          <RNSVGPath
            clipRule={0}
            d="M15.7071 5.29289C16.0976 5.68342 16.0976 6.31658 15.7071 6.70711L10.4142 12L15.7071 17.2929C16.0976 17.6834 16.0976 18.3166 15.7071 18.7071C15.3166 19.0976 14.6834 19.0976 14.2929 18.7071L8.2929 12.7071C7.9024 12.3166 7.9024 11.6834 8.2929 11.2929L14.2929 5.29289C14.6834 4.90237 15.3166 4.90237 15.7071 5.29289Z"
            fill={
              {
                "type": 2,
              }
            }
            fillRule={0}
            propList={
              [
                "fill",
                "fillRule",
              ]
            }
          />
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Text
      allowFontScaling={true}
      maxFontSizeMultiplier={1.4}
      onBlur={[Function]}
      onFocus={[Function]}
      style={
        {
          "color": {
            "dynamic": {
              "dark": "rgba(255, 255, 255, 0.65)",
              "light": "rgba(19, 19, 19, 0.63)",
            },
          },
          "fontFamily": "Basel Grotesk",
          "fontSize": 19,
          "fontWeight": "400",
          "lineHeight": 24,
        }
      }
      suppressHighlighting={true}
    >
      Back
    </Text>
  </View>
</View>
`;
