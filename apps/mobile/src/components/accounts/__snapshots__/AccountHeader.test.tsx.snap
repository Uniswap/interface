// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AccountHeader renders correctly 1`] = `
<View
  style={
    {
      "flexDirection": "column",
      "gap": 12,
      "overflow": "scroll",
      "paddingLeft": 12,
      "paddingRight": 12,
      "paddingTop": 8,
      "width": "100%",
    }
  }
  testID="account-header"
>
  <View
    style={
      {
        "alignItems": "flex-start",
        "flexDirection": "column",
        "gap": 12,
        "width": "100%",
      }
    }
  >
    <View
      style={
        {
          "flexDirection": "row",
          "justifyContent": "space-between",
          "width": "100%",
        }
      }
    >
      <View
        style={
          {
            "flexDirection": "row",
            "flexShrink": 1,
            "gap": 12,
          }
        }
      >
        <View
          collapsable={false}
          dd-action-name="account-header-avatar"
          focusVisibleStyle={{}}
          forwardedRef={[Function]}
          hitSlop={20}
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          role="button"
          style={
            {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderBottomLeftRadius": 12,
              "borderBottomRightRadius": 12,
              "borderTopLeftRadius": 12,
              "borderTopRightRadius": 12,
              "flexDirection": "row",
              "opacity": 1,
              "transform": [
                {
                  "scale": 1,
                },
              ],
            }
          }
          testID="account-header-avatar"
        >
          <View
            onBlur={[Function]}
            onFocus={[Function]}
            style={
              {
                "backgroundColor": {
                  "dynamic": {
                    "dark": "#131313",
                    "light": "#FFFFFF",
                  },
                },
                "borderBottomColor": {
                  "dynamic": {
                    "dark": "rgba(255,255,255,0.12)",
                    "light": "rgba(34,34,34,0.05)",
                  },
                },
                "borderBottomLeftRadius": 999999,
                "borderBottomRightRadius": 999999,
                "borderBottomWidth": 1,
                "borderLeftColor": {
                  "dynamic": {
                    "dark": "rgba(255,255,255,0.12)",
                    "light": "rgba(34,34,34,0.05)",
                  },
                },
                "borderLeftWidth": 1,
                "borderRightColor": {
                  "dynamic": {
                    "dark": "rgba(255,255,255,0.12)",
                    "light": "rgba(34,34,34,0.05)",
                  },
                },
                "borderRightWidth": 1,
                "borderStyle": "solid",
                "borderTopColor": {
                  "dynamic": {
                    "dark": "rgba(255,255,255,0.12)",
                    "light": "rgba(34,34,34,0.05)",
                  },
                },
                "borderTopLeftRadius": 999999,
                "borderTopRightRadius": 999999,
                "borderTopWidth": 1,
                "flexDirection": "column",
                "position": "relative",
              }
            }
            testID="account-icon"
          >
            <View
              onBlur={[Function]}
              onFocus={[Function]}
              style={
                {
                  "flexDirection": "column",
                  "height": 52,
                  "width": 52,
                }
              }
            />
          </View>
        </View>
        <View
          style={
            {
              "alignSelf": "center",
              "flexDirection": "row",
              "flexShrink": 1,
              "gap": 8,
              "justifyContent": "space-between",
            }
          }
          testID="account-header/display-name"
        >
          <View
            collapsable={false}
            focusVisibleStyle={{}}
            forwardedRef={[Function]}
            hitSlop={20}
            jestAnimatedStyle={
              {
                "value": {},
              }
            }
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            role="button"
            style={
              {
                "backgroundColor": "transparent",
                "borderBottomLeftRadius": 12,
                "borderBottomRightRadius": 12,
                "borderTopLeftRadius": 12,
                "borderTopRightRadius": 12,
                "flexDirection": "column",
                "flexGrow": 1,
                "opacity": 1,
                "transform": [
                  {
                    "scale": 1,
                  },
                ],
              }
            }
          >
            <View
              onBlur={[Function]}
              onFocus={[Function]}
              onLayout={[Function]}
              style={
                {
                  "flexDirection": "column",
                  "flexGrow": 1,
                }
              }
            >
              <View
                onBlur={[Function]}
                onFocus={[Function]}
                style={
                  {
                    "flexDirection": "row",
                    "opacity": 0,
                    "width": 0,
                  }
                }
              >
                <Text
                  allowFontScaling={true}
                  maxFontSizeMultiplier={1.4}
                  numberOfLines={1}
                  onBlur={[Function]}
                  onFocus={[Function]}
                  onLayout={[Function]}
                  style={
                    {
                      "backgroundColor": {
                        "dynamic": {
                          "dark": "#131313",
                          "light": "#FFFFFF",
                        },
                      },
                      "color": {
                        "dynamic": {
                          "dark": "#FFFFFF",
                          "light": "#131313",
                        },
                      },
                      "flexShrink": 1,
                      "fontFamily": "Basel Grotesk",
                      "fontSize": 19,
                      "fontWeight": "400",
                      "lineHeight": 24,
                      "zIndex": 2,
                    }
                  }
                  suppressHighlighting={true}
                >
                  Test Account
                </Text>
              </View>
              <View
                collapsable={false}
                focusVisibleStyle={{}}
                forwardedRef={[Function]}
                jestAnimatedStyle={
                  {
                    "value": {},
                  }
                }
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                role="button"
                style={
                  {
                    "backgroundColor": "transparent",
                    "borderBottomLeftRadius": 12,
                    "borderBottomRightRadius": 12,
                    "borderTopLeftRadius": 12,
                    "borderTopRightRadius": 12,
                    "flexDirection": "column",
                    "opacity": 1,
                    "transform": [
                      {
                        "scale": 1,
                      },
                    ],
                  }
                }
                testID="account-header-copy-address"
              >
                <View
                  onBlur={[Function]}
                  onFocus={[Function]}
                  style={
                    {
                      "alignItems": "center",
                      "color": {
                        "dynamic": {
                          "dark": "#FFFFFF",
                          "light": "#222222",
                        },
                      },
                      "flexDirection": "row",
                      "gap": 4,
                    }
                  }
                >
                  <Text
                    allowFontScaling={true}
                    maxFontSizeMultiplier={1.4}
                    numberOfLines={1}
                    onBlur={[Function]}
                    onFocus={[Function]}
                    style={
                      {
                        "color": {
                          "dynamic": {
                            "dark": "rgba(255, 255, 255, 0.65)",
                            "light": "rgba(19, 19, 19, 0.63)",
                          },
                        },
                        "fontFamily": "Basel Grotesk",
                        "fontSize": 17,
                        "fontWeight": "400",
                        "lineHeight": 22.1,
                      }
                    }
                    suppressHighlighting={true}
                  >
                    0x​82D5...3Fa6
                  </Text>
                  <RNSVGSvgView
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    fill="none"
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    strokeWidth={8}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        {
                          "color": "rgba(19, 19, 19, 0.35)",
                          "height": 16,
                          "width": 16,
                        },
                        {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    vbHeight={16}
                    vbWidth={16}
                  >
                    <RNSVGGroup
                      color="rgba(19, 19, 19, 0.35)"
                      fill={null}
                      propList={
                        [
                          "fill",
                          "strokeWidth",
                        ]
                      }
                      strokeWidth={8}
                    >
                      <RNSVGPath
                        d="M12.25 4.16667H6.41667C4.96533 4.16667 4.16667 4.96533 4.16667 6.41667V12.25C4.16667 13.7013 4.96533 14.5 6.41667 14.5H12.25C13.7013 14.5 14.5 13.7013 14.5 12.25V6.41667C14.5 4.96533 13.7013 4.16667 12.25 4.16667ZM13.5 12.25C13.5 13.138 13.138 13.5 12.25 13.5H6.41667C5.52867 13.5 5.16667 13.138 5.16667 12.25V6.41667C5.16667 5.52867 5.52867 5.16667 6.41667 5.16667H12.25C13.138 5.16667 13.5 5.52867 13.5 6.41667V12.25ZM2.5 3.74666V9.58667C2.5 10.3853 2.82206 10.582 2.92806 10.6473C3.16406 10.7913 3.23726 11.0993 3.09326 11.3347C2.9986 11.4887 2.83468 11.5733 2.66602 11.5733C2.57735 11.5733 2.48661 11.5493 2.40527 11.5C1.80461 11.132 1.5 10.4887 1.5 9.58667V3.74666C1.5 2.31866 2.31941 1.5 3.74674 1.5H9.58659C10.7099 1.5 11.2467 1.99265 11.5 2.40531C11.644 2.64065 11.57 2.94865 11.3346 3.09265C11.0986 3.23732 10.792 3.16266 10.6473 2.92733C10.5826 2.82133 10.3853 2.49935 9.58659 2.49935H3.74674C2.86141 2.50002 2.5 2.86133 2.5 3.74666Z"
                        fill={
                          {
                            "type": 2,
                          }
                        }
                        propList={
                          [
                            "fill",
                            "stroke",
                            "strokeWidth",
                          ]
                        }
                        stroke={
                          {
                            "type": 2,
                          }
                        }
                        strokeWidth="0.5"
                      />
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          {
            "alignItems": "flex-start",
            "flexDirection": "row",
            "gap": 16,
          }
        }
      >
        <View
          collapsable={false}
          dd-action-name="Scan"
          focusVisibleStyle={{}}
          forwardedRef={[Function]}
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          role="button"
          style={
            {
              "backgroundColor": "transparent",
              "borderBottomLeftRadius": 12,
              "borderBottomRightRadius": 12,
              "borderTopLeftRadius": 12,
              "borderTopRightRadius": 12,
              "flexDirection": "column",
              "opacity": 1,
              "transform": [
                {
                  "scale": 1,
                },
              ],
            }
          }
        >
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight={28}
            bbWidth={28}
            fill="none"
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            strokeWidth={8}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                {
                  "color": "rgba(19, 19, 19, 0.63)",
                  "height": 28,
                  "width": 28,
                },
                {
                  "flex": 0,
                  "height": 28,
                  "width": 28,
                },
              ]
            }
            vbHeight={28}
            vbWidth={28}
          >
            <RNSVGGroup
              color="rgba(19, 19, 19, 0.63)"
              fill={null}
              propList={
                [
                  "fill",
                  "strokeWidth",
                ]
              }
              strokeWidth={8}
            >
              <RNSVGPath
                clipRule={0}
                d="M5.06026 5.0602C5.62479 4.49567 6.39045 4.17853 7.18881 4.17853H10.097C10.6887 4.17853 11.1684 4.65822 11.1684 5.24996C11.1684 5.84169 10.6887 6.32138 10.097 6.32138H7.18881C6.95877 6.32138 6.73815 6.41277 6.57549 6.57543C6.41283 6.73809 6.32145 6.95871 6.32145 7.18874V10.0969C6.32145 10.6887 5.84175 11.1684 5.25002 11.1684C4.65828 11.1684 4.17859 10.6887 4.17859 10.0969V7.18874C4.17859 6.39039 4.49574 5.62472 5.06026 5.0602ZM16.7807 5.24996C16.7807 4.65822 17.2604 4.17853 17.8521 4.17853H20.7603C21.5587 4.17853 22.3243 4.49567 22.8889 5.0602C23.4534 5.62472 23.7705 6.39038 23.7705 7.18874V10.0969C23.7705 10.6887 23.2908 11.1684 22.6991 11.1684C22.1074 11.1684 21.6277 10.6887 21.6277 10.0969V7.18874C21.6277 6.95871 21.5363 6.73809 21.3736 6.57543C21.211 6.41277 20.9904 6.32138 20.7603 6.32138H17.8521C17.2604 6.32138 16.7807 5.84169 16.7807 5.24996ZM5.25002 16.7806C5.84175 16.7806 6.32145 17.2603 6.32145 17.8521V20.7603C6.32145 20.9903 6.41283 21.2109 6.57549 21.3736C6.73815 21.5362 6.95877 21.6276 7.18881 21.6276H10.097C10.6887 21.6276 11.1684 22.1073 11.1684 22.699C11.1684 23.2908 10.6887 23.7705 10.097 23.7705H7.18881C6.39045 23.7705 5.62479 23.4533 5.06026 22.8888C4.49574 22.3243 4.17859 21.5586 4.17859 20.7603V17.8521C4.17859 17.2603 4.65828 16.7806 5.25002 16.7806ZM22.6991 16.7806C23.2908 16.7806 23.7705 17.2603 23.7705 17.8521V20.7603C23.7705 21.5586 23.4534 22.3243 22.8889 22.8888C22.3243 23.4533 21.5587 23.7705 20.7603 23.7705H17.8521C17.2604 23.7705 16.7807 23.2908 16.7807 22.699C16.7807 22.1073 17.2604 21.6276 17.8521 21.6276H20.7603C20.9904 21.6276 21.211 21.5362 21.3736 21.3736C21.5363 21.2109 21.6277 20.9903 21.6277 20.7603V17.8521C21.6277 17.2603 22.1074 16.7806 22.6991 16.7806Z"
                fill={
                  {
                    "type": 2,
                  }
                }
                fillRule={0}
                propList={
                  [
                    "fill",
                    "fillRule",
                  ]
                }
              />
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          collapsable={false}
          jestAnimatedStyle={
            {
              "value": {
                "justifyContent": "center",
                "opacity": 1,
                "transform": [
                  {
                    "rotate": "0deg",
                  },
                  {
                    "scale": 1,
                  },
                ],
              },
            }
          }
          style={
            {
              "justifyContent": "center",
              "opacity": 1,
              "transform": [
                {
                  "rotate": "0deg",
                },
                {
                  "scale": 1,
                },
              ],
            }
          }
          testID="account-header-settings-icon"
        >
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight={28}
            bbWidth={28}
            fill="none"
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            strokeWidth={8}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                {
                  "color": "rgba(19, 19, 19, 0.63)",
                  "height": 28,
                  "width": 28,
                },
                {
                  "flex": 0,
                  "height": 28,
                  "width": 28,
                },
              ]
            }
            vbHeight={28}
            vbWidth={28}
          >
            <RNSVGGroup
              color="rgba(19, 19, 19, 0.63)"
              fill={null}
              propList={
                [
                  "fill",
                  "strokeWidth",
                ]
              }
              strokeWidth={8}
            >
              <RNSVGPath
                d="M24.3017 17.0333C23.2167 16.4033 22.5517 15.2483 22.5517 14C22.5517 12.7517 23.2167 11.5967 24.3017 10.9667C24.4883 10.85 24.5583 10.6167 24.4417 10.43L22.4933 7.07C22.4233 6.94166 22.295 6.87168 22.1667 6.87168C22.0967 6.87168 22.0266 6.895 21.9683 6.93C21.4317 7.23334 20.825 7.39666 20.2183 7.39666C19.6 7.39666 18.9933 7.23332 18.445 6.91832C17.36 6.28832 16.695 5.145 16.695 3.89666C16.695 3.675 16.52 3.5 16.31 3.5H11.69C11.48 3.5 11.305 3.675 11.305 3.89666C11.305 5.145 10.64 6.28832 9.555 6.91832C9.00667 7.23332 8.40002 7.39666 7.78168 7.39666C7.17502 7.39666 6.56835 7.23334 6.03168 6.93C5.84502 6.81334 5.61167 6.88333 5.50667 7.07L3.54668 10.43C3.51168 10.4883 3.5 10.5583 3.5 10.6167C3.5 10.7567 3.57002 10.885 3.69835 10.9667C4.78335 11.5967 5.44835 12.74 5.44835 13.9883C5.44835 15.2483 4.78332 16.4033 3.70999 17.0333H3.69835C3.51168 17.15 3.44165 17.3833 3.55832 17.57L5.50667 20.93C5.57667 21.0583 5.705 21.1283 5.83333 21.1283C5.90333 21.1283 5.97335 21.105 6.03168 21.07C7.12835 20.4517 8.47 20.4517 9.555 21.0817C10.6283 21.7117 11.2933 22.855 11.2933 24.1033C11.2933 24.325 11.4683 24.5 11.69 24.5H16.31C16.52 24.5 16.695 24.325 16.695 24.1033C16.695 22.855 17.36 21.7117 18.445 21.0817C18.9933 20.7667 19.6 20.6033 20.2183 20.6033C20.825 20.6033 21.4317 20.7667 21.9683 21.07C22.155 21.1867 22.3883 21.1167 22.4933 20.93L24.4533 17.57C24.4883 17.5117 24.5 17.4417 24.5 17.3833C24.5 17.2433 24.43 17.115 24.3017 17.0333ZM14 17.5C12.0633 17.5 10.5 15.9367 10.5 14C10.5 12.0633 12.0633 10.5 14 10.5C15.9367 10.5 17.5 12.0633 17.5 14C17.5 15.9367 15.9367 17.5 14 17.5Z"
                fill={
                  {
                    "type": 2,
                  }
                }
                propList={
                  [
                    "fill",
                  ]
                }
              />
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
      </View>
    </View>
  </View>
</View>
`;
