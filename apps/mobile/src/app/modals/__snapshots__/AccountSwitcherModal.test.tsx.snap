// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AccountSwitcher renders correctly 1`] = `
<View
  style={
    {
      "flexDirection": "column",
      "maxHeight": 1298,
      "paddingBottom": 12,
    }
  }
>
  <View
    style={
      {
        "flexDirection": "column",
        "gap": 16,
        "marginLeft": 12,
        "marginRight": 12,
        "paddingBottom": 16,
        "paddingTop": 12,
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        {
          "alignItems": "center",
          "flexDirection": "column",
          "flexShrink": 1,
          "gap": 8,
        }
      }
    >
      <View
        style={
          {
            "backgroundColor": {
              "dynamic": {
                "dark": "transparent",
                "light": "transparent",
              },
            },
            "borderBottomColor": {
              "dynamic": {
                "dark": "transparent",
                "light": "transparent",
              },
            },
            "borderBottomLeftRadius": 999999,
            "borderBottomRightRadius": 999999,
            "borderBottomWidth": 0,
            "borderLeftColor": {
              "dynamic": {
                "dark": "transparent",
                "light": "transparent",
              },
            },
            "borderLeftWidth": 0,
            "borderRightColor": {
              "dynamic": {
                "dark": "transparent",
                "light": "transparent",
              },
            },
            "borderRightWidth": 0,
            "borderStyle": "solid",
            "borderTopColor": {
              "dynamic": {
                "dark": "transparent",
                "light": "transparent",
              },
            },
            "borderTopLeftRadius": 999999,
            "borderTopRightRadius": 999999,
            "borderTopWidth": 0,
            "flexDirection": "column",
            "position": "relative",
          }
        }
        testID="account-icon"
      >
        <View
          style={
            {
              "flexDirection": "column",
              "height": 56,
              "width": 56,
            }
          }
        />
      </View>
      <View
        style={
          {
            "flexDirection": "column",
            "flexShrink": 1,
            "gap": 0,
          }
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "gap": 12,
              "justifyContent": "center",
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "flexShrink": 1,
                "gap": 4,
                "justifyContent": "center",
              }
            }
          >
            <Text
              adjustsFontSizeToFit={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              maxFontSizeMultiplier={1.4}
              numberOfLines={1}
              style={
                {
                  "color": {
                    "dynamic": {
                      "dark": "#FFFFFF",
                      "light": "#222222",
                    },
                  },
                  "flexShrink": 1,
                  "fontFamily": "Basel Grotesk",
                  "fontSize": 19,
                  "fontWeight": "400",
                  "lineHeight": 24,
                }
              }
              suppressHighlighting={true}
              testID="address-display/name/Test Account"
            >
              Test Account
            </Text>
          </View>
        </View>
        <View
          hitSlop={16}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "flexDirection": "column",
              "opacity": 1,
              "transform": [
                {
                  "scale": 1,
                },
              ],
            }
          }
          testID="copy"
        >
          <View
            style={
              {
                "alignItems": "center",
                "backgroundColor": {
                  "dynamic": {
                    "dark": "transparent",
                    "light": "transparent",
                  },
                },
                "borderBottomLeftRadius": 999999,
                "borderBottomRightRadius": 999999,
                "borderTopLeftRadius": 999999,
                "borderTopRightRadius": 999999,
                "flexDirection": "row",
                "gap": 4,
                "justifyContent": "center",
                "marginTop": 0,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
              }
            }
          >
            <Text
              allowFontScaling={true}
              maxFontSizeMultiplier={1.4}
              style={
                {
                  "color": {
                    "dynamic": {
                      "dark": "#9B9B9B",
                      "light": "#7D7D7D",
                    },
                  },
                  "fontFamily": "Basel Grotesk",
                  "fontSize": 17,
                  "fontWeight": "400",
                  "lineHeight": 24,
                }
              }
              suppressHighlighting={true}
            >
              0xâ€‹82D56A...373Fa6
            </Text>
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight={17}
              bbWidth={17}
              fill="none"
              focusable={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              strokeWidth={8}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  {
                    "color": "#7D7D7D",
                    "height": 17,
                    "width": 17,
                  },
                  {
                    "flex": 0,
                    "height": 17,
                    "width": 17,
                  },
                ]
              }
              vbHeight={24}
              vbWidth={24}
            >
              <RNSVGGroup
                color="#7D7D7D"
                fill={null}
                propList={
                  [
                    "fill",
                    "strokeWidth",
                  ]
                }
                strokeWidth={8}
              >
                <RNSVGPath
                  d="M18.375 6.25H9.625C7.448 6.25 6.25 7.448 6.25 9.625V18.375C6.25 20.552 7.448 21.75 9.625 21.75H18.375C20.552 21.75 21.75 20.552 21.75 18.375V9.625C21.75 7.448 20.552 6.25 18.375 6.25ZM20.25 18.375C20.25 19.707 19.707 20.25 18.375 20.25H9.625C8.293 20.25 7.75 19.707 7.75 18.375V9.625C7.75 8.293 8.293 7.75 9.625 7.75H18.375C19.707 7.75 20.25 8.293 20.25 9.625V18.375ZM3.75 5.62V14.38C3.75 15.578 4.23309 15.873 4.39209 15.971C4.74609 16.187 4.85589 16.649 4.63989 17.002C4.49789 17.233 4.25202 17.36 3.99902 17.36C3.86602 17.36 3.72991 17.324 3.60791 17.25C2.70691 16.698 2.25 15.733 2.25 14.38V5.62C2.25 3.478 3.47912 2.25 5.62012 2.25H14.3799C16.0649 2.25 16.87 2.98897 17.25 3.60797C17.466 3.96097 17.355 4.42298 17.002 4.63898C16.648 4.85598 16.1879 4.74399 15.9709 4.39099C15.8739 4.23199 15.5779 3.74902 14.3799 3.74902H5.62012C4.29212 3.75002 3.75 4.292 3.75 5.62Z"
                  fill={
                    {
                      "type": 2,
                    }
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                />
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        {
          "flexDirection": "row",
          "paddingLeft": 12,
          "paddingRight": 12,
        }
      }
    >
      <View
        collapsable={false}
        dd-action-name="Wallet settings"
        focusVisibleStyle={
          {
            "backgroundColor": "rgba(34,34,34,0.09)",
          }
        }
        forwardedRef={[Function]}
        jestAnimatedStyle={
          {
            "value": {
              "transform": [
                {
                  "scale": 1,
                },
              ],
            },
          }
        }
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onLayout={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "alignSelf": "stretch",
            "backgroundColor": "rgba(34,34,34,0.05)",
            "borderBottomColor": "transparent",
            "borderBottomLeftRadius": 16,
            "borderBottomRightRadius": 16,
            "borderBottomWidth": 1,
            "borderLeftColor": "transparent",
            "borderLeftWidth": 1,
            "borderRightColor": "transparent",
            "borderRightWidth": 1,
            "borderStyle": "solid",
            "borderTopColor": "transparent",
            "borderTopLeftRadius": 16,
            "borderTopRightRadius": 16,
            "borderTopWidth": 1,
            "flex": 1,
            "flexBasis": 0,
            "flexDirection": "row",
            "gap": 8,
            "height": "auto",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
            "transform": [
              {
                "scale": 1,
              },
            ],
          }
        }
        testID="wallet-settings"
      >
        <Text
          maxFontSizeMultiplier={1.2}
          numberOfLines={1}
          onBlur={[Function]}
          onFocus={[Function]}
          style={
            {
              "color": {
                "dynamic": {
                  "dark": "#FFFFFF",
                  "light": "#222222",
                },
              },
              "fontFamily": "Basel Grotesk",
              "fontSize": 17,
              "fontWeight": "500",
              "lineHeight": 21.849999999999998,
            }
          }
          suppressHighlighting={true}
        >
          Wallet settings
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      {
        "flexDirection": "column",
        "maxHeight": 649,
      }
    }
  >
    <View
      style={
        {
          "flexDirection": "column",
          "flexShrink": 1,
        }
      }
    >
      ExpoLinearGradient
      <RCTScrollView
        collapsable={false}
        data={[]}
        getItem={[Function]}
        getItemCount={[Function]}
        handlerTag={1}
        handlerType="NativeViewGestureHandler"
        keyExtractor={[Function]}
        onContentSizeChange={[Function]}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        renderScrollComponent={[Function]}
        scrollEventThrottle={0.0001}
        stickyHeaderIndices={[]}
        viewabilityConfigCallbackPairs={[]}
        waitFor={
          [
            {
              "current": null,
            },
            {
              "current": null,
            },
          ]
        }
      >
        <View />
      </RCTScrollView>
      ExpoLinearGradient
    </View>
  </View>
  <View
    hitSlop={
      {
        "bottom": 5,
        "left": 5,
        "right": 5,
        "top": 5,
      }
    }
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "flexDirection": "column",
        "marginTop": 16,
        "opacity": 1,
        "transform": [
          {
            "scale": 1,
          },
        ],
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "gap": 8,
          "marginLeft": 24,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": {
              "dynamic": {
                "dark": "#131313",
                "light": "#FFFFFF",
              },
            },
            "borderBottomColor": {
              "dynamic": {
                "dark": "rgba(255,255,255,0.12)",
                "light": "rgba(34,34,34,0.05)",
              },
            },
            "borderBottomLeftRadius": 999999,
            "borderBottomRightRadius": 999999,
            "borderBottomWidth": 1,
            "borderLeftColor": {
              "dynamic": {
                "dark": "rgba(255,255,255,0.12)",
                "light": "rgba(34,34,34,0.05)",
              },
            },
            "borderLeftWidth": 1,
            "borderRightColor": {
              "dynamic": {
                "dark": "rgba(255,255,255,0.12)",
                "light": "rgba(34,34,34,0.05)",
              },
            },
            "borderRightWidth": 1,
            "borderStyle": "solid",
            "borderTopColor": {
              "dynamic": {
                "dark": "rgba(255,255,255,0.12)",
                "light": "rgba(34,34,34,0.05)",
              },
            },
            "borderTopLeftRadius": 999999,
            "borderTopRightRadius": 999999,
            "borderTopWidth": 1,
            "flexDirection": "column",
            "height": 32,
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "shadowColor": "rgb(34,34,34)",
            "shadowOffset": {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0.050980392156862744,
            "shadowRadius": 10,
            "width": 32,
          }
        }
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={16}
          bbWidth={16}
          fill="none"
          focusable={false}
          meetOrSlice={0}
          minX={0}
          minY={0}
          strokeWidth={2}
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              {
                "color": "#7D7D7D",
                "height": 16,
                "width": 16,
              },
              {
                "flex": 0,
                "height": 16,
                "width": 16,
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
        >
          <RNSVGGroup
            color="#7D7D7D"
            fill={null}
            propList={
              [
                "fill",
                "strokeWidth",
              ]
            }
            strokeWidth={2}
          >
            <RNSVGPath
              d="M19 11H13V5C13 4.448 12.552 4 12 4C11.448 4 11 4.448 11 5V11H5C4.448 11 4 11.448 4 12C4 12.552 4.448 13 5 13H11V19C11 19.552 11.448 20 12 20C12.552 20 13 19.552 13 19V13H19C19.552 13 20 12.552 20 12C20 11.448 19.552 11 19 11Z"
              fill={
                {
                  "type": 2,
                }
              }
              propList={
                [
                  "fill",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <Text
        allowFontScaling={true}
        maxFontSizeMultiplier={1.2}
        style={
          {
            "color": {
              "dynamic": {
                "dark": "#FFFFFF",
                "light": "#222222",
              },
            },
            "fontFamily": "Basel Grotesk",
            "fontSize": 17,
            "fontWeight": "500",
            "lineHeight": 19.549999999999997,
          }
        }
        suppressHighlighting={true}
      >
        Add wallet
      </Text>
    </View>
  </View>
</View>
`;
