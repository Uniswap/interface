// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GenericImportForm renders a placeholder when there is no value 1`] = `
<View
  onStartShouldSetResponder={[Function]}
  onTouchEnd={[Function]}
  style={
    {
      "flexDirection": "column",
      "gap": 12,
    }
  }
>
  <View
    style={
      {
        "backgroundColor": {
          "dynamic": {
            "dark": "#131313",
            "light": "#FFFFFF",
          },
        },
        "borderBottomColor": {
          "dynamic": {
            "dark": "rgba(255,255,255,0.12)",
            "light": "rgba(34,34,34,0.05)",
          },
        },
        "borderBottomLeftRadius": 20,
        "borderBottomRightRadius": 20,
        "borderBottomWidth": 1,
        "borderLeftColor": {
          "dynamic": {
            "dark": "rgba(255,255,255,0.12)",
            "light": "rgba(34,34,34,0.05)",
          },
        },
        "borderLeftWidth": 1,
        "borderRightColor": {
          "dynamic": {
            "dark": "rgba(255,255,255,0.12)",
            "light": "rgba(34,34,34,0.05)",
          },
        },
        "borderRightWidth": 1,
        "borderStyle": "solid",
        "borderTopColor": {
          "dynamic": {
            "dark": "rgba(255,255,255,0.12)",
            "light": "rgba(34,34,34,0.05)",
          },
        },
        "borderTopLeftRadius": 20,
        "borderTopRightRadius": 20,
        "borderTopWidth": 1,
        "flexDirection": "column",
        "flexShrink": 1,
        "minHeight": 120,
        "paddingBottom": 16,
        "paddingLeft": 24,
        "paddingRight": 24,
        "paddingTop": 16,
        "width": "100%",
      }
    }
  >
    <View
      style={
        {
          "alignItems": "flex-end",
          "flexDirection": "row",
          "justifyContent": "center",
        }
      }
    >
      <TextInput
        autoCapitalize="none"
        autoComplete="off"
        autoCorrect={false}
        autoFocus={true}
        blurOnSubmit={false}
        focusVisibleStyle={{}}
        focusable={true}
        maxFontSizeMultiplier={1.4}
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSubmitEditing={[Function]}
        placeholderTextColor={
          {
            "dynamic": {
              "dark": "rgba(255, 255, 255, 0.38)",
              "light": "rgba(19, 19, 19, 0.35)",
            },
          }
        }
        returnKeyType="done"
        scrollEnabled={false}
        selectionColor="rgba(19, 19, 19, 0.35)"
        spellCheck={false}
        style={
          {
            "backgroundColor": {
              "dynamic": {
                "dark": "transparent",
                "light": "transparent",
              },
            },
            "borderBottomColor": {
              "dynamic": {
                "dark": "transparent",
                "light": "transparent",
              },
            },
            "borderBottomLeftRadius": 12,
            "borderBottomRightRadius": 12,
            "borderBottomWidth": 1,
            "borderLeftColor": {
              "dynamic": {
                "dark": "transparent",
                "light": "transparent",
              },
            },
            "borderLeftWidth": 1,
            "borderRightColor": {
              "dynamic": {
                "dark": "transparent",
                "light": "transparent",
              },
            },
            "borderRightWidth": 1,
            "borderStyle": "solid",
            "borderTopColor": {
              "dynamic": {
                "dark": "transparent",
                "light": "transparent",
              },
            },
            "borderTopLeftRadius": 12,
            "borderTopRightRadius": 12,
            "borderTopWidth": 1,
            "color": {
              "dynamic": {
                "dark": "#FFFFFF",
                "light": "#131313",
              },
            },
            "flexShrink": 1,
            "fontFamily": "Basel Grotesk",
            "fontSize": 17,
            "fontWeight": "500",
            "height": "auto",
            "lineHeight": 20.4,
            "minWidth": 0,
            "paddingBottom": 0,
            "paddingLeft": 0,
            "paddingRight": 0,
            "paddingTop": 0,
            "textAlign": "left",
          }
        }
        testID="import-account-input"
      />
    </View>
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "column",
          "justifyContent": "center",
          "left": 24,
          "paddingBottom": 16,
          "paddingTop": 16,
          "position": "absolute",
          "top": 0,
        }
      }
    >
      <Text
        allowFontScaling={true}
        maxFontSizeMultiplier={1.4}
        pointerEvents="none"
        style={
          {
            "color": {
              "dynamic": {
                "dark": "rgba(255, 255, 255, 0.65)",
                "light": "rgba(19, 19, 19, 0.63)",
              },
            },
            "fontFamily": "Basel Grotesk",
            "fontSize": 17,
            "fontWeight": "400",
            "lineHeight": 20.4,
          }
        }
        suppressHighlighting={true}
      >
        seed phrase
      </Text>
    </View>
    <View
      style={
        {
          "alignItems": "center",
          "bottom": 0,
          "flexDirection": "column",
          "height": 0,
          "justifyContent": "center",
          "left": 0,
          "position": "absolute",
          "right": 0,
        }
      }
    >
      <View
        style={
          {
            "flexDirection": "column",
            "position": "absolute",
          }
        }
      >
        <View
          collapsable={false}
          focusVisibleStyle={{}}
          forwardedRef={[Function]}
          jestAnimatedStyle={
            {
              "value": {},
            }
          }
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          role="button"
          style={
            {
              "backgroundColor": "rgba(255, 55, 199, 0.08)",
              "borderBottomLeftRadius": 12,
              "borderBottomRightRadius": 12,
              "borderTopLeftRadius": 12,
              "borderTopRightRadius": 12,
              "flexDirection": "column",
              "opacity": 1,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
              "transform": [
                {
                  "scale": 1,
                },
              ],
            }
          }
        >
          <View
            onBlur={[Function]}
            onFocus={[Function]}
            style={
              {
                "alignItems": "center",
                "color": {
                  "dynamic": {
                    "dark": "#FFFFFF",
                    "light": "#222222",
                  },
                },
                "flexDirection": "row",
                "gap": 4,
                "justifyContent": "center",
              }
            }
          >
            <Text
              allowFontScaling={true}
              maxFontSizeMultiplier={1.2}
              onBlur={[Function]}
              onFocus={[Function]}
              style={
                {
                  "color": {
                    "dynamic": {
                      "dark": "#FF37C7",
                      "light": "#FF37C7",
                    },
                  },
                  "fontFamily": "Basel Grotesk",
                  "fontSize": 15,
                  "fontWeight": "500",
                  "lineHeight": 17.25,
                }
              }
              suppressHighlighting={true}
            >
              Paste
            </Text>
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight={16}
              bbWidth={16}
              fill="currentColor"
              focusable={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              strokeWidth={8}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  {
                    "color": "#FF37C7",
                    "height": 16,
                    "width": 16,
                  },
                  {
                    "flex": 0,
                    "height": 16,
                    "width": 16,
                  },
                ]
              }
              vbHeight={16}
              vbWidth={16}
            >
              <RNSVGGroup
                color="#FF37C7"
                fill={
                  {
                    "type": 2,
                  }
                }
                propList={
                  [
                    "fill",
                    "strokeWidth",
                  ]
                }
                strokeWidth={8}
              >
                <RNSVGPath
                  d="M14 4.24666V8.56665C14 8.71332 13.9866 8.86 13.9533 9H11.2533C10.0066 9 9 10.0067 9 11.2533V13.9534C8.86 13.9867 8.7134 14 8.56673 14H4.25326C2.74659 14 2 13.2467 2 11.7467V4.24666C2 2.74666 2.74659 2 4.25326 2H11.7467C13.2534 2 14 2.74666 14 4.24666ZM10 11.2533V13.48C10.06 13.44 10.1067 13.3933 10.16 13.34L13.34 10.16C13.3933 10.1067 13.44 10.06 13.48 10H11.2533C10.5599 10 10 10.56 10 11.2533Z"
                  fill={
                    {
                      "type": 2,
                    }
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                />
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      {
        "flexDirection": "column",
      }
    }
  />
</View>
`;
