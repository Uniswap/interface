diff --git a/dist/esm/Popover.mjs b/dist/esm/Popover.mjs
index ed2dc72f632ed2adab30a9b7c25e79d955ffac5d..6c4f2046942c45908b8f37f66c2e56ef2af1238d 100644
--- a/dist/esm/Popover.mjs
+++ b/dist/esm/Popover.mjs
@@ -10,12 +10,11 @@ import { FloatingOverrideContext } from "@tamagui/floating";
 import { FocusScope } from "@tamagui/focus-scope";
 import { composeEventHandlers, withStaticProperties } from "@tamagui/helpers";
 import { Popper, PopperAnchor, PopperArrow, PopperContent, PopperContentFrame, PopperContext, usePopperContext } from "@tamagui/popper";
-import { Portal, resolveViewZIndex } from "@tamagui/portal";
+import { Portal } from "@tamagui/portal";
 import { RemoveScroll } from "@tamagui/remove-scroll";
 import { Sheet, SheetController } from "@tamagui/sheet";
 import { YStack } from "@tamagui/stacks";
 import { useControllableState } from "@tamagui/use-controllable-state";
-import { StackZIndexContext } from "@tamagui/z-index-stack";
 import * as React from "react";
 import { Platform, ScrollView } from "react-native-web";
 import { useFloatingContext } from "./useFloatingContext.mjs";
@@ -49,14 +48,13 @@ const POPOVER_SCOPE = "PopoverScope",
       composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);
     if (!props.children) return null;
     const trigger = /* @__PURE__ */jsx(View, {
-      "aria-expanded": context.open,
-      "data-state": getState(context.open),
-      ...rest,
-      ref: composedTriggerRef,
-      onPress: composeEventHandlers(props.onPress, context.onOpenToggle)
-    });
-    if (anchorTo) {
-      const virtualRef = {
+        "aria-expanded": context.open,
+        "data-state": getState(context.open),
+        ...rest,
+        ref: composedTriggerRef,
+        onPress: composeEventHandlers(props.onPress, context.onOpenToggle)
+      }),
+      virtualRef = React.useMemo(() => anchorTo ? {
         current: {
           getBoundingClientRect: () => isWeb ? DOMRect.fromRect(anchorTo) : anchorTo,
           ...(!isWeb && {
@@ -64,16 +62,13 @@ const POPOVER_SCOPE = "PopoverScope",
             measureInWindow: c => c(anchorTo?.x, anchorTo?.y, anchorTo?.width, anchorTo?.height)
           })
         }
-      };
-      return /* @__PURE__ */jsx(PopperAnchor, {
-        virtualRef,
-        __scopePopper: __scopePopover || POPOVER_SCOPE,
-        children: trigger
-      });
-    }
+      } : null, [context.anchorTo, anchorTo?.x, anchorTo?.y, anchorTo?.x, anchorTo?.height, anchorTo?.width]);
     return context.hasCustomAnchor ? trigger : /* @__PURE__ */jsx(PopperAnchor, {
+      ...(virtualRef && {
+        virtualRef
+      }),
       __scopePopper: __scopePopover || POPOVER_SCOPE,
-      asChild: !0,
+      asChild: rest.asChild,
       children: trigger
     });
   }),
@@ -143,7 +138,7 @@ function PopoverContentPortal(props) {
   const {
       __scopePopover
     } = props,
-    zIndex = props.zIndex,
+    zIndex = props.zIndex ?? 15e4,
     context = usePopoverContext(__scopePopover),
     popperContext = usePopperContext(__scopePopover || POPOVER_SCOPE),
     themeName = useThemeName(),
@@ -156,7 +151,6 @@ function PopoverContentPortal(props) {
     adaptContext,
     children: props.children
   })), /* @__PURE__ */jsx(Portal, {
-    stackZIndex: !0,
     zIndex,
     children: /* @__PURE__ */jsxs(Theme, {
       forceClassName: !0,
@@ -164,10 +158,7 @@ function PopoverContentPortal(props) {
       children: [!!context.open && !context.breakpointActive && /* @__PURE__ */jsx(YStack, {
         fullscreen: !0,
         onPress: composeEventHandlers(props.onPress, context.onOpenToggle)
-      }), /* @__PURE__ */jsx(StackZIndexContext, {
-        zIndex: resolveViewZIndex(zIndex),
-        children: contents
-      })]
+      }), contents]
     })
   });
 }
@@ -395,4 +386,4 @@ const PopoverSheetController = ({
     return context.open === !1 ? !1 : isAdapted;
   };
 export { Popover, PopoverAnchor, PopoverArrow, PopoverClose, PopoverContent, PopoverContext, PopoverTrigger, usePopoverContext };
-//# sourceMappingURL=Popover.mjs.map
+
