diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/on-chain-quote-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/on-chain-quote-provider.js
index 85c8ce5..8482296 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/on-chain-quote-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/on-chain-quote-provider.js
@@ -378,7 +378,8 @@ class OnChainQuoteProvider {
                 // To work around this and avoid throwing errors when really we just couldn't get a quote, we catch this
                 // case and return 0 quotes found.
                 if ((this.chainId == util_1.ChainId.ARBITRUM_ONE ||
-                    this.chainId == util_1.ChainId.ARBITRUM_RINKEBY) &&
+                    this.chainId == util_1.ChainId.ARBITRUM_RINKEBY ||
+                    this.chainId == util_1.ChainId.ARBITRUM_GOERLI) &&
                     lodash_1.default.every(failedQuoteStates, (failedQuoteState) => failedQuoteState.reason instanceof ProviderGasError) &&
                     attemptNumber == this.retryOptions.retries) {
                     log_1.log.error(`Failed to get quotes on Arbitrum due to provider gas error issue. Overriding error to return 0 quotes.`);
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/token-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/token-provider.d.ts
index 9befa84..265af02 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/token-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/token-provider.d.ts
@@ -61,6 +61,7 @@ export declare const DAI_ARBITRUM_RINKEBY: Token;
 export declare const USDT_ARBITRUM_RINKEBY: Token;
 export declare const USDC_ARBITRUM_RINKEBY: Token;
 export declare const UNI_ARBITRUM_RINKEBY: Token;
+export declare const USDC_ARBITRUM_GOERLI: Token;
 export declare const WMATIC_POLYGON: Token;
 export declare const WETH_POLYGON: Token;
 export declare const USDC_POLYGON: Token;
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/token-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/token-provider.js
index a164918..6ca1834 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/token-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/token-provider.js
@@ -56,6 +56,7 @@ exports.DAI_ARBITRUM_RINKEBY = new sdk_core_1.Token(util_1.ChainId.ARBITRUM_RINK
 exports.USDT_ARBITRUM_RINKEBY = new sdk_core_1.Token(util_1.ChainId.ARBITRUM_RINKEBY, '0x920b9301c2de92186299cd2abc7199e25b9728b3', 6, 'UDST', 'Tether USD');
 exports.USDC_ARBITRUM_RINKEBY = new sdk_core_1.Token(util_1.ChainId.ARBITRUM_RINKEBY, '0x09b98f8b2395d076514037ff7d39a091a536206c', 6, 'USDC', 'USD//C');
 exports.UNI_ARBITRUM_RINKEBY = new sdk_core_1.Token(util_1.ChainId.ARBITRUM_RINKEBY, '0x049251a7175071316e089d0616d8b6aacd2c93b8', 18, 'UNI', 'Uni token');
+exports.USDC_ARBITRUM_GOERLI = new sdk_core_1.Token(util_1.ChainId.ARBITRUM_GOERLI, '0x8FB1E3fC51F3b789dED7557E680551d93Ea9d892', 6, 'USDC', 'USD//C'); // This is the AAVE Test USDC
 //polygon tokens
 exports.WMATIC_POLYGON = new sdk_core_1.Token(util_1.ChainId.POLYGON, '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', 18, 'WMATIC', 'Wrapped MATIC');
 exports.WETH_POLYGON = new sdk_core_1.Token(util_1.ChainId.POLYGON, '0x7ceb23fd6bc0add59e62ac25578270cff1b9f619', 18, 'WETH', 'Wrapped Ether');
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v2/static-subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/v2/static-subgraph-provider.js
index dac0966..7735f81 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/v2/static-subgraph-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v2/static-subgraph-provider.js
@@ -29,6 +29,7 @@ const BASES_TO_CHECK_TRADES_AGAINST = {
     [chains_1.ChainId.OPTIMISM]: [],
     [chains_1.ChainId.ARBITRUM_ONE]: [],
     [chains_1.ChainId.ARBITRUM_RINKEBY]: [],
+    [chains_1.ChainId.ARBITRUM_GOERLI]: [],
     [chains_1.ChainId.OPTIMISTIC_KOVAN]: [],
     [chains_1.ChainId.POLYGON]: [],
     [chains_1.ChainId.POLYGON_MUMBAI]: [],
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v3/static-subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/v3/static-subgraph-provider.js
index f150ff8..d6f84aa 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/v3/static-subgraph-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v3/static-subgraph-provider.js
@@ -66,6 +66,10 @@ const BASES_TO_CHECK_TRADES_AGAINST = {
         token_provider_1.UNI_ARBITRUM_RINKEBY,
         token_provider_1.USDT_ARBITRUM_RINKEBY,
     ],
+    [chains_1.ChainId.ARBITRUM_GOERLI]: [
+        chains_1.WRAPPED_NATIVE_CURRENCY[chains_1.ChainId.ARBITRUM_GOERLI],
+        token_provider_1.USDC_ARBITRUM_GOERLI,
+    ],
     [chains_1.ChainId.OPTIMISTIC_KOVAN]: [
         chains_1.WRAPPED_NATIVE_CURRENCY[chains_1.ChainId.OPTIMISTIC_KOVAN],
         token_provider_1.DAI_OPTIMISTIC_KOVAN,
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/alpha-router.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/alpha-router.js
index f2f0630..c35ff7a 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/alpha-router.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/alpha-router.js
@@ -172,7 +172,8 @@ class AlphaRouter {
                 optimismGasDataProvider !== null && optimismGasDataProvider !== void 0 ? optimismGasDataProvider : new gas_data_provider_1.OptimismGasDataProvider(chainId, this.multicall2Provider);
         }
         if (chainId == chains_1.ChainId.ARBITRUM_ONE ||
-            chainId == chains_1.ChainId.ARBITRUM_RINKEBY) {
+            chainId == chains_1.ChainId.ARBITRUM_RINKEBY ||
+            chainId == chains_1.ChainId.ARBITRUM_GOERLI) {
             this.l2GasDataProvider =
                 arbitrumGasDataProvider !== null && arbitrumGasDataProvider !== void 0 ? arbitrumGasDataProvider : new gas_data_provider_1.ArbitrumGasDataProvider(chainId, this.provider);
         }
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/config.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/config.js
index 62bf724..4a22b31 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/config.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/config.js
@@ -35,6 +35,7 @@ const DEFAULT_ROUTING_CONFIG_BY_CHAIN = (chainId) => {
         // have to adjust the routing config so we explore fewer routes.
         case chains_1.ChainId.ARBITRUM_ONE:
         case chains_1.ChainId.ARBITRUM_RINKEBY:
+        case chains_1.ChainId.ARBITRUM_GOERLI:
         case chains_1.ChainId.CELO:
         case chains_1.ChainId.CELO_ALFAJORES:
             return {
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/get-candidate-pools.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/get-candidate-pools.js
index 6575e99..8faee72 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/get-candidate-pools.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/get-candidate-pools.js
@@ -42,6 +42,7 @@ const baseTokensByChain = {
         token_provider_1.USDT_ARBITRUM,
     ],
     [util_1.ChainId.ARBITRUM_RINKEBY]: [token_provider_1.DAI_ARBITRUM_RINKEBY, token_provider_1.USDT_ARBITRUM_RINKEBY],
+    [util_1.ChainId.ARBITRUM_GOERLI]: [token_provider_1.USDC_ARBITRUM_GOERLI],
     [util_1.ChainId.POLYGON]: [token_provider_1.USDC_POLYGON, token_provider_1.WMATIC_POLYGON],
     [util_1.ChainId.POLYGON_MUMBAI]: [token_provider_1.DAI_POLYGON_MUMBAI, token_provider_1.WMATIC_POLYGON_MUMBAI],
     [util_1.ChainId.CELO]: [token_provider_1.CUSD_CELO, token_provider_1.CEUR_CELO, token_provider_1.CELO],
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/gas-model.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/gas-model.js
index e268025..f5cc2f1 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/gas-model.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/gas-model.js
@@ -14,6 +14,7 @@ exports.usdGasTokensByChain = {
         token_provider_1.USDT_OPTIMISTIC_KOVAN,
     ],
     [chains_1.ChainId.ARBITRUM_RINKEBY]: [token_provider_1.DAI_ARBITRUM_RINKEBY, token_provider_1.USDT_ARBITRUM_RINKEBY],
+    [chains_1.ChainId.ARBITRUM_GOERLI]: [token_provider_1.USDC_ARBITRUM_GOERLI],
     [chains_1.ChainId.KOVAN]: [token_provider_1.DAI_KOVAN, token_provider_1.USDC_KOVAN, token_provider_1.USDT_KOVAN],
     [chains_1.ChainId.GÖRLI]: [token_provider_1.DAI_GÖRLI, token_provider_1.USDC_GÖRLI, token_provider_1.USDT_GÖRLI, token_provider_1.WBTC_GÖRLI],
     [chains_1.ChainId.ROPSTEN]: [token_provider_1.DAI_ROPSTEN, token_provider_1.USDC_ROPSTEN, token_provider_1.USDT_ROPSTEN],
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/gas-costs.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/gas-costs.js
index 4e50d64..962c46f 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/gas-costs.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/gas-costs.js
@@ -18,6 +18,7 @@ const BASE_SWAP_COST = (id) => {
             return bignumber_1.BigNumber.from(2000);
         case __1.ChainId.ARBITRUM_ONE:
         case __1.ChainId.ARBITRUM_RINKEBY:
+        case __1.ChainId.ARBITRUM_GOERLI:
             return bignumber_1.BigNumber.from(5000);
         case __1.ChainId.POLYGON:
         case __1.ChainId.POLYGON_MUMBAI:
@@ -46,6 +47,7 @@ const COST_PER_INIT_TICK = (id) => {
             return bignumber_1.BigNumber.from(31000);
         case __1.ChainId.ARBITRUM_ONE:
         case __1.ChainId.ARBITRUM_RINKEBY:
+        case __1.ChainId.ARBITRUM_GOERLI:
             return bignumber_1.BigNumber.from(31000);
         case __1.ChainId.POLYGON:
         case __1.ChainId.POLYGON_MUMBAI:
@@ -72,6 +74,7 @@ const COST_PER_HOP = (id) => {
             return bignumber_1.BigNumber.from(80000);
         case __1.ChainId.ARBITRUM_ONE:
         case __1.ChainId.ARBITRUM_RINKEBY:
+        case __1.ChainId.ARBITRUM_GOERLI:
             return bignumber_1.BigNumber.from(80000);
         case __1.ChainId.POLYGON:
         case __1.ChainId.POLYGON_MUMBAI:
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.js
index c0b50dc..0d939a9 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.js
@@ -54,7 +54,8 @@ class V3HeuristicGasModelFactory extends gas_model_1.IOnChainGasModelFactory {
                 [l1Used, l1FeeInWei] = this.calculateOptimismToL1SecurityFee(route, swapOptions, l2GasData);
             }
             else if (chainId == util_1.ChainId.ARBITRUM_ONE ||
-                chainId == util_1.ChainId.ARBITRUM_RINKEBY) {
+                chainId == util_1.ChainId.ARBITRUM_RINKEBY ||
+                chainId == util_1.ChainId.ARBITRUM_GOERLI) {
                 [l1Used, l1FeeInWei] = this.calculateArbitrumToL1SecurityFee(route, swapOptions, l2GasData);
             }
             // wrap fee to native currency
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/legacy-router/bases.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/legacy-router/bases.d.ts
index c2f610e..6e35597 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/legacy-router/bases.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/legacy-router/bases.d.ts
@@ -33,6 +33,9 @@ export declare const ADDITIONAL_BASES: (tokenProvider: ITokenProvider) => Promis
     421611?: {
         [tokenAddress: string]: Token[];
     } | undefined;
+    421613?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
     137?: {
         [tokenAddress: string]: Token[];
     } | undefined;
@@ -84,6 +87,9 @@ export declare const CUSTOM_BASES: (tokenProvider: ITokenProvider) => Promise<{
     421611?: {
         [tokenAddress: string]: Token[];
     } | undefined;
+    421613?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
     137?: {
         [tokenAddress: string]: Token[];
     } | undefined;
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/legacy-router/bases.js b/node_modules/@uniswap/smart-order-router/build/main/routers/legacy-router/bases.js
index 507b8b8..2395fe8 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/legacy-router/bases.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/legacy-router/bases.js
@@ -24,6 +24,9 @@ const BASES_TO_CHECK_TRADES_AGAINST = (_tokenProvider) => {
         [chains_1.ChainId.ARBITRUM_RINKEBY]: [
             chains_1.WRAPPED_NATIVE_CURRENCY[chains_1.ChainId.ARBITRUM_RINKEBY],
         ],
+        [chains_1.ChainId.ARBITRUM_GOERLI]: [
+            chains_1.WRAPPED_NATIVE_CURRENCY[chains_1.ChainId.ARBITRUM_GOERLI],
+        ],
         [chains_1.ChainId.POLYGON]: [token_provider_1.WMATIC_POLYGON],
         [chains_1.ChainId.POLYGON_MUMBAI]: [token_provider_1.WMATIC_POLYGON_MUMBAI],
         [chains_1.ChainId.CELO]: [chains_1.WRAPPED_NATIVE_CURRENCY[chains_1.ChainId.CELO]],
diff --git a/node_modules/@uniswap/smart-order-router/build/main/util/addresses.js b/node_modules/@uniswap/smart-order-router/build/main/util/addresses.js
index 8d43806..7c8b245 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/util/addresses.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/util/addresses.js
@@ -7,15 +7,18 @@ const chains_1 = require("./chains");
 const CELO_V3_CORE_FACTORY_ADDRESSES = '0xAfE208a311B21f13EF87E33A90049fC17A7acDEc';
 const CELO_QUOTER_ADDRESSES = '0x82825d0554fA07f7FC52Ab63c961F330fdEFa8E8';
 const CELO_MULTICALL_ADDRESS = '0x633987602DE5C4F337e3DbF265303A1080324204';
-exports.V3_CORE_FACTORY_ADDRESSES = Object.assign(Object.assign({}, constructSameAddressMap(v3_sdk_1.FACTORY_ADDRESS)), { [chains_1.ChainId.CELO]: CELO_V3_CORE_FACTORY_ADDRESSES, [chains_1.ChainId.CELO_ALFAJORES]: CELO_V3_CORE_FACTORY_ADDRESSES });
-exports.QUOTER_V2_ADDRESSES = Object.assign(Object.assign({}, constructSameAddressMap('0x61fFE014bA17989E743c5F6cB21bF9697530B21e')), { [chains_1.ChainId.CELO]: CELO_QUOTER_ADDRESSES, [chains_1.ChainId.CELO_ALFAJORES]: CELO_QUOTER_ADDRESSES });
+const ARBITRUM_GOERLI_V3_CORE_FACTORY_ADDRESSES = '0x4893376342d5D7b3e31d4184c08b265e5aB2A3f6'
+const ARBITRUM_GOERLI_QUOTER_ADDRESSES = '0x1dd92b83591781D0C6d98d07391eea4b9a6008FA'
+const ARBITRUM_GOERLI_MULTICALL_ADDRESS = '0x8260CB40247290317a4c062F3542622367F206Ee'
+exports.V3_CORE_FACTORY_ADDRESSES = Object.assign(Object.assign({}, constructSameAddressMap(v3_sdk_1.FACTORY_ADDRESS)), { [chains_1.ChainId.CELO]: CELO_V3_CORE_FACTORY_ADDRESSES, [chains_1.ChainId.CELO_ALFAJORES]: CELO_V3_CORE_FACTORY_ADDRESSES, [ChainId.ARBITRUM_GOERLI]: ARBITRUM_GOERLI_V3_CORE_FACTORY_ADDRESSES });
+exports.QUOTER_V2_ADDRESSES = Object.assign(Object.assign({}, constructSameAddressMap('0x61fFE014bA17989E743c5F6cB21bF9697530B21e')), { [chains_1.ChainId.CELO]: CELO_QUOTER_ADDRESSES, [chains_1.ChainId.CELO_ALFAJORES]: CELO_QUOTER_ADDRESSES, [ChainId.ARBITRUM_GOERLI]: ARBITRUM_GOERLI_QUOTER_ADDRESSES });
 exports.MIXED_ROUTE_QUOTER_V1_ADDRESSES = {
     [chains_1.ChainId.MAINNET]: '0x84E44095eeBfEC7793Cd7d5b57B7e401D7f1cA2E',
     [chains_1.ChainId.RINKEBY]: '0x84E44095eeBfEC7793Cd7d5b57B7e401D7f1cA2E',
     [chains_1.ChainId.ROPSTEN]: '0x84E44095eeBfEC7793Cd7d5b57B7e401D7f1cA2E',
     [chains_1.ChainId.GÖRLI]: '0xBa60b6e6fF25488308789E6e0A65D838be34194e',
 };
-exports.UNISWAP_MULTICALL_ADDRESSES = Object.assign(Object.assign({}, constructSameAddressMap('0x1F98415757620B543A52E61c46B32eB19261F984')), { [chains_1.ChainId.CELO]: CELO_MULTICALL_ADDRESS, [chains_1.ChainId.CELO_ALFAJORES]: CELO_MULTICALL_ADDRESS });
+exports.UNISWAP_MULTICALL_ADDRESSES = Object.assign(Object.assign({}, constructSameAddressMap('0x1F98415757620B543A52E61c46B32eB19261F984')), { [chains_1.ChainId.CELO]: CELO_MULTICALL_ADDRESS, [chains_1.ChainId.CELO_ALFAJORES]: CELO_MULTICALL_ADDRESS, [ChainId.ARBITRUM_GOERLI]: ARBITRUM_GOERLI_MULTICALL_ADDRESS });
 exports.OVM_GASPRICE_ADDRESS = '0x420000000000000000000000000000000000000F';
 exports.ARB_GASINFO_ADDRESS = '0x000000000000000000000000000000000000006C';
 exports.TICK_LENS_ADDRESS = '0xbfd8137f7d1516D3ea5cA83523914859ec47F573';
@@ -40,5 +43,6 @@ exports.WETH9 = {
     [chains_1.ChainId.OPTIMISTIC_KOVAN]: new sdk_core_1.Token(chains_1.ChainId.OPTIMISTIC_KOVAN, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
     [chains_1.ChainId.ARBITRUM_ONE]: new sdk_core_1.Token(chains_1.ChainId.ARBITRUM_ONE, '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1', 18, 'WETH', 'Wrapped Ether'),
     [chains_1.ChainId.ARBITRUM_RINKEBY]: new sdk_core_1.Token(chains_1.ChainId.ARBITRUM_RINKEBY, '0xB47e6A5f8b33b3F17603C83a0535A9dcD7E32681', 18, 'WETH', 'Wrapped Ether'),
+    [chains_1.ChainId.ARBITRUM_GOERLI]: new sdk_core_1.Token(chains_1.ChainId.ARBITRUM_GOERLI, '0xe39Ab88f8A4777030A534146A9Ca3B52bd5D43A3', 18, 'WETH', 'Wrapped Ether'),
 };
 //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkcmVzc2VzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWwvYWRkcmVzc2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLGdEQUEwQztBQUMxQyw0Q0FBa0Q7QUFDbEQscUNBQXlFO0FBRXpFLE1BQU0sOEJBQThCLEdBQ2xDLDRDQUE0QyxDQUFDO0FBQy9DLE1BQU0scUJBQXFCLEdBQUcsNENBQTRDLENBQUM7QUFDM0UsTUFBTSxzQkFBc0IsR0FBRyw0Q0FBNEMsQ0FBQztBQUUvRCxRQUFBLHlCQUF5QixtQ0FDakMsdUJBQXVCLENBQUMsd0JBQWUsQ0FBQyxLQUMzQyxDQUFDLGdCQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsOEJBQThCLEVBQzlDLENBQUMsZ0JBQU8sQ0FBQyxjQUFjLENBQUMsRUFBRSw4QkFBOEIsSUFHeEQ7QUFFVyxRQUFBLG1CQUFtQixtQ0FDM0IsdUJBQXVCLENBQUMsNENBQTRDLENBQUMsS0FDeEUsQ0FBQyxnQkFBTyxDQUFDLElBQUksQ0FBQyxFQUFFLHFCQUFxQixFQUNyQyxDQUFDLGdCQUFPLENBQUMsY0FBYyxDQUFDLEVBQUUscUJBQXFCLElBRy9DO0FBRVcsUUFBQSwrQkFBK0IsR0FBZTtJQUN6RCxDQUFDLGdCQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsNENBQTRDO0lBQy9ELENBQUMsZ0JBQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSw0Q0FBNEM7SUFDL0QsQ0FBQyxnQkFBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLDRDQUE0QztJQUMvRCxDQUFDLGdCQUFPLENBQUMsS0FBSyxDQUFDLEVBQUUsNENBQTRDO0NBQzlELENBQUM7QUFFVyxRQUFBLDJCQUEyQixtQ0FDbkMsdUJBQXVCLENBQUMsNENBQTRDLENBQUMsS0FDeEUsQ0FBQyxnQkFBTyxDQUFDLElBQUksQ0FBQyxFQUFFLHNCQUFzQixFQUN0QyxDQUFDLGdCQUFPLENBQUMsY0FBYyxDQUFDLEVBQUUsc0JBQXNCLElBR2hE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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/util/chains.d.ts b/node_modules/@uniswap/smart-order-router/build/main/util/chains.d.ts
index 3180e68..3420b0d 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/util/chains.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/util/chains.d.ts
@@ -9,6 +9,7 @@ export declare enum ChainId {
     OPTIMISTIC_KOVAN = 69,
     ARBITRUM_ONE = 42161,
     ARBITRUM_RINKEBY = 421611,
+    ARBITRUM_GOERLI = 421613,
     POLYGON = 137,
     POLYGON_MUMBAI = 80001,
     CELO = 42220,
@@ -31,6 +32,7 @@ export declare enum ChainName {
     OPTIMISTIC_KOVAN = "optimism-kovan",
     ARBITRUM_ONE = "arbitrum-mainnet",
     ARBITRUM_RINKEBY = "arbitrum-rinkeby",
+    ARBITRUM_GOERLI = "arbitrum-goerli",
     POLYGON = "polygon-mainnet",
     POLYGON_MUMBAI = "polygon-mumbai",
     CELO = "celo-mainnet",
diff --git a/node_modules/@uniswap/smart-order-router/build/main/util/chains.js b/node_modules/@uniswap/smart-order-router/build/main/util/chains.js
index 837a9c4..7f49703 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/util/chains.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/util/chains.js
@@ -13,6 +13,7 @@ var ChainId;
     ChainId[ChainId["OPTIMISTIC_KOVAN"] = 69] = "OPTIMISTIC_KOVAN";
     ChainId[ChainId["ARBITRUM_ONE"] = 42161] = "ARBITRUM_ONE";
     ChainId[ChainId["ARBITRUM_RINKEBY"] = 421611] = "ARBITRUM_RINKEBY";
+    ChainId[ChainId["ARBITRUM_GOERLI"] = 421613] = "ARBITRUM_GOERLI";
     ChainId[ChainId["POLYGON"] = 137] = "POLYGON";
     ChainId[ChainId["POLYGON_MUMBAI"] = 80001] = "POLYGON_MUMBAI";
     ChainId[ChainId["CELO"] = 42220] = "CELO";
@@ -30,6 +31,7 @@ exports.SUPPORTED_CHAINS = [
     ChainId.OPTIMISTIC_KOVAN,
     ChainId.ARBITRUM_ONE,
     ChainId.ARBITRUM_RINKEBY,
+    ChainId.ARBITRUM_GOERLI,
     ChainId.POLYGON,
     ChainId.POLYGON_MUMBAI,
     ChainId.GÖRLI,
@@ -49,6 +51,7 @@ exports.HAS_L1_FEE = [
     ChainId.OPTIMISTIC_KOVAN,
     ChainId.ARBITRUM_ONE,
     ChainId.ARBITRUM_RINKEBY,
+    ChainId.ARBITRUM_GOERLI,
 ];
 exports.NETWORKS_WITH_SAME_UNISWAP_ADDRESSES = [
     ChainId.MAINNET,
@@ -83,6 +86,8 @@ const ID_TO_CHAIN_ID = (id) => {
             return ChainId.ARBITRUM_ONE;
         case 421611:
             return ChainId.ARBITRUM_RINKEBY;
+        case 421613:
+            return ChainId.ARBITRUM_GOERLI;
         case 137:
             return ChainId.POLYGON;
         case 80001:
@@ -111,6 +116,7 @@ var ChainName;
     ChainName["OPTIMISTIC_KOVAN"] = "optimism-kovan";
     ChainName["ARBITRUM_ONE"] = "arbitrum-mainnet";
     ChainName["ARBITRUM_RINKEBY"] = "arbitrum-rinkeby";
+    ChainName["ARBITRUM_GOERLI"] = "arbitrum-goerli";
     ChainName["POLYGON"] = "polygon-mainnet";
     ChainName["POLYGON_MUMBAI"] = "polygon-mumbai";
     ChainName["CELO"] = "celo-mainnet";
@@ -173,6 +179,11 @@ exports.NATIVE_NAMES_BY_ID = {
         'ETHER',
         '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
     ],
+    [ChainId.ARBITRUM_GOERLI]: [
+        'ETH',
+        'ETHER',
+        '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
+    ],
     [ChainId.POLYGON]: ['MATIC', '0x0000000000000000000000000000000000001010'],
     [ChainId.POLYGON_MUMBAI]: [
         'MATIC',
@@ -193,6 +204,7 @@ exports.NATIVE_CURRENCY = {
     [ChainId.OPTIMISTIC_KOVAN]: NativeCurrencyName.ETHER,
     [ChainId.ARBITRUM_ONE]: NativeCurrencyName.ETHER,
     [ChainId.ARBITRUM_RINKEBY]: NativeCurrencyName.ETHER,
+    [ChainId.ARBITRUM_GOERLI]: NativeCurrencyName.ETHER,
     [ChainId.POLYGON]: NativeCurrencyName.MATIC,
     [ChainId.POLYGON_MUMBAI]: NativeCurrencyName.MATIC,
     [ChainId.CELO]: NativeCurrencyName.CELO,
@@ -220,6 +232,8 @@ const ID_TO_NETWORK_NAME = (id) => {
             return ChainName.ARBITRUM_ONE;
         case 421611:
             return ChainName.ARBITRUM_RINKEBY;
+        case 421613:
+            return ChainName.ARBITRUM_GOERLI;
         case 137:
             return ChainName.POLYGON;
         case 80001:
@@ -258,6 +272,8 @@ const ID_TO_PROVIDER = (id) => {
             return process.env.JSON_RPC_PROVIDER_ARBITRUM_ONE;
         case ChainId.ARBITRUM_RINKEBY:
             return process.env.JSON_RPC_PROVIDER_ARBITRUM_RINKEBY;
+        case ChainId.ARBITRUM_GOERLI:
+            return process.env.JSON_RPC_PROVIDER_ARBITRUM_GOERLI;
         case ChainId.POLYGON:
             return process.env.JSON_RPC_PROVIDER_POLYGON;
         case ChainId.POLYGON_MUMBAI:
@@ -281,6 +297,7 @@ exports.WRAPPED_NATIVE_CURRENCY = {
     [ChainId.OPTIMISTIC_KOVAN]: new sdk_core_1.Token(ChainId.OPTIMISTIC_KOVAN, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
     [ChainId.ARBITRUM_ONE]: new sdk_core_1.Token(ChainId.ARBITRUM_ONE, '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1', 18, 'WETH', 'Wrapped Ether'),
     [ChainId.ARBITRUM_RINKEBY]: new sdk_core_1.Token(ChainId.ARBITRUM_RINKEBY, '0xB47e6A5f8b33b3F17603C83a0535A9dcD7E32681', 18, 'WETH', 'Wrapped Ether'),
+    [ChainId.ARBITRUM_GOERLI]: new sdk_core_1.Token(ChainId.ARBITRUM_GOERLI, '0xe39Ab88f8A4777030A534146A9Ca3B52bd5D43A3', 18, 'WETH', 'Wrapped Ether'),
     [ChainId.POLYGON]: new sdk_core_1.Token(ChainId.POLYGON, '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', 18, 'WMATIC', 'Wrapped MATIC'),
     [ChainId.POLYGON_MUMBAI]: new sdk_core_1.Token(ChainId.POLYGON_MUMBAI, '0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', 18, 'WMATIC', 'Wrapped MATIC'),
     // The Celo native currency 'CELO' implements the erc-20 token standard
diff --git a/node_modules/@uniswap/smart-order-router/build/main/util/gas-factory-helpers.js b/node_modules/@uniswap/smart-order-router/build/main/util/gas-factory-helpers.js
index efe55a2..ba38a03 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/util/gas-factory-helpers.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/util/gas-factory-helpers.js
@@ -170,7 +170,7 @@ async function calculateGasUsed(chainId, route, simulatedGasUsed, v2PoolProvider
     const gasPriceWei = route.gasPriceWei;
     // calculate L2 to L1 security fee if relevant
     let l2toL1FeeInWei = bignumber_1.BigNumber.from(0);
-    if ([util_1.ChainId.ARBITRUM_ONE, util_1.ChainId.ARBITRUM_RINKEBY].includes(chainId)) {
+    if ([util_1.ChainId.ARBITRUM_ONE, util_1.ChainId.ARBITRUM_RINKEBY, util_1.ChainId.ARBITRUM_GOERLI].includes(chainId)) {
         l2toL1FeeInWei = calculateArbitrumToL1FeeFromCalldata(route.methodParameters.calldata, l2GasData)[1];
     }
     else if ([util_1.ChainId.OPTIMISM, util_1.ChainId.OPTIMISTIC_KOVAN].includes(chainId)) {
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/on-chain-quote-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/on-chain-quote-provider.js
index c5ae71e..7fc9825 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/on-chain-quote-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/on-chain-quote-provider.js
@@ -370,7 +371,8 @@ export class OnChainQuoteProvider {
                 // To work around this and avoid throwing errors when really we just couldn't get a quote, we catch this
                 // case and return 0 quotes found.
                 if ((this.chainId == ChainId.ARBITRUM_ONE ||
-                    this.chainId == ChainId.ARBITRUM_RINKEBY) &&
+                    this.chainId == ChainId.ARBITRUM_RINKEBY ||
+                    this.chainId == ChainId.ARBITRUM_GOERLI) &&
                     _.every(failedQuoteStates, (failedQuoteState) => failedQuoteState.reason instanceof ProviderGasError) &&
                     attemptNumber == this.retryOptions.retries) {
                     log.error(`Failed to get quotes on Arbitrum due to provider gas error issue. Overriding error to return 0 quotes.`);
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/token-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/token-provider.d.ts
index 9befa84..265af02 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/token-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/token-provider.d.ts
@@ -61,6 +61,7 @@ export declare const DAI_ARBITRUM_RINKEBY: Token;
 export declare const USDT_ARBITRUM_RINKEBY: Token;
 export declare const USDC_ARBITRUM_RINKEBY: Token;
 export declare const UNI_ARBITRUM_RINKEBY: Token;
+export declare const USDC_ARBITRUM_GOERLI: Token;
 export declare const WMATIC_POLYGON: Token;
 export declare const WETH_POLYGON: Token;
 export declare const USDC_POLYGON: Token;
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/token-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/token-provider.js
index 18d7f76..43ae748 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/token-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/token-provider.js
@@ -49,6 +49,7 @@ export const DAI_ARBITRUM_RINKEBY = new Token(ChainId.ARBITRUM_RINKEBY, '0x5364d
 export const USDT_ARBITRUM_RINKEBY = new Token(ChainId.ARBITRUM_RINKEBY, '0x920b9301c2de92186299cd2abc7199e25b9728b3', 6, 'UDST', 'Tether USD');
 export const USDC_ARBITRUM_RINKEBY = new Token(ChainId.ARBITRUM_RINKEBY, '0x09b98f8b2395d076514037ff7d39a091a536206c', 6, 'USDC', 'USD//C');
 export const UNI_ARBITRUM_RINKEBY = new Token(ChainId.ARBITRUM_RINKEBY, '0x049251a7175071316e089d0616d8b6aacd2c93b8', 18, 'UNI', 'Uni token');
+export const USDC_ARBITRUM_GOERLI = new Token(ChainId.ARBITRUM_GOERLI, '0x8FB1E3fC51F3b789dED7557E680551d93Ea9d892', 6, 'USDC', 'USD//C'); // This is the AAVE Test USDC
 //polygon tokens
 export const WMATIC_POLYGON = new Token(ChainId.POLYGON, '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', 18, 'WMATIC', 'Wrapped MATIC');
 export const WETH_POLYGON = new Token(ChainId.POLYGON, '0x7ceb23fd6bc0add59e62ac25578270cff1b9f619', 18, 'WETH', 'Wrapped Ether');
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v2/static-subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/v2/static-subgraph-provider.js
index ba2c65c..abeaa39 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/v2/static-subgraph-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v2/static-subgraph-provider.js
@@ -23,6 +23,7 @@ const BASES_TO_CHECK_TRADES_AGAINST = {
     [ChainId.OPTIMISM]: [],
     [ChainId.ARBITRUM_ONE]: [],
     [ChainId.ARBITRUM_RINKEBY]: [],
+    [ChainId.ARBITRUM_GOERLI]: [],
     [ChainId.OPTIMISTIC_KOVAN]: [],
     [ChainId.POLYGON]: [],
     [ChainId.POLYGON_MUMBAI]: [],
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/static-subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/static-subgraph-provider.js
index e0cebe3..f4bef6c 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/static-subgraph-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/static-subgraph-provider.js
@@ -4,7 +4,7 @@ import _ from 'lodash';
 import { unparseFeeAmount } from '../../util/amounts';
 import { ChainId, WRAPPED_NATIVE_CURRENCY } from '../../util/chains';
 import { log } from '../../util/log';
-import { CELO, CELO_ALFAJORES, CEUR_CELO, CEUR_CELO_ALFAJORES, CUSD_CELO, CUSD_CELO_ALFAJORES, DAI_ARBITRUM, DAI_ARBITRUM_RINKEBY, DAI_CELO, DAI_CELO_ALFAJORES, DAI_GÖRLI, DAI_KOVAN, DAI_MAINNET, DAI_MOONBEAM, DAI_OPTIMISM, DAI_OPTIMISTIC_KOVAN, DAI_POLYGON_MUMBAI, DAI_RINKEBY_1, DAI_RINKEBY_2, DAI_ROPSTEN, UNI_ARBITRUM_RINKEBY, USDC_ARBITRUM, USDC_ETHEREUM_GNOSIS, USDC_GÖRLI, USDC_KOVAN, USDC_MAINNET, USDC_MOONBEAM, USDC_OPTIMISM, USDC_OPTIMISTIC_KOVAN, USDC_POLYGON, USDC_RINKEBY, USDC_ROPSTEN, USDT_ARBITRUM, USDT_ARBITRUM_RINKEBY, USDT_GÖRLI, USDT_KOVAN, USDT_MAINNET, USDT_OPTIMISM, USDT_OPTIMISTIC_KOVAN, USDT_RINKEBY, USDT_ROPSTEN, WBTC_ARBITRUM, WBTC_GNOSIS, WBTC_GÖRLI, WBTC_KOVAN, WBTC_MAINNET, WBTC_MOONBEAM, WBTC_OPTIMISM, WBTC_OPTIMISTIC_KOVAN, WETH_POLYGON, WMATIC_POLYGON, WMATIC_POLYGON_MUMBAI, WXDAI_GNOSIS, } from '../token-provider';
+import { CELO, CELO_ALFAJORES, CEUR_CELO, CEUR_CELO_ALFAJORES, CUSD_CELO, CUSD_CELO_ALFAJORES, DAI_ARBITRUM, DAI_ARBITRUM_RINKEBY, DAI_CELO, DAI_CELO_ALFAJORES, DAI_GÖRLI, DAI_KOVAN, DAI_MAINNET, DAI_MOONBEAM, DAI_OPTIMISM, DAI_OPTIMISTIC_KOVAN, DAI_POLYGON_MUMBAI, DAI_RINKEBY_1, DAI_RINKEBY_2, DAI_ROPSTEN, UNI_ARBITRUM_RINKEBY, USDC_ARBITRUM, USDC_ARBITRUM_GOERLI, USDC_ETHEREUM_GNOSIS, USDC_GÖRLI, USDC_KOVAN, USDC_MAINNET, USDC_MOONBEAM, USDC_OPTIMISM, USDC_OPTIMISTIC_KOVAN, USDC_POLYGON, USDC_RINKEBY, USDC_ROPSTEN, USDT_ARBITRUM, USDT_ARBITRUM_RINKEBY, USDT_GÖRLI, USDT_KOVAN, USDT_MAINNET, USDT_OPTIMISM, USDT_OPTIMISTIC_KOVAN, USDT_RINKEBY, USDT_ROPSTEN, WBTC_ARBITRUM, WBTC_GNOSIS, WBTC_GÖRLI, WBTC_KOVAN, WBTC_MAINNET, WBTC_MOONBEAM, WBTC_OPTIMISM, WBTC_OPTIMISTIC_KOVAN, WETH_POLYGON, WMATIC_POLYGON, WMATIC_POLYGON_MUMBAI, WXDAI_GNOSIS, } from '../token-provider';
 const BASES_TO_CHECK_TRADES_AGAINST = {
     [ChainId.MAINNET]: [
         WRAPPED_NATIVE_CURRENCY[ChainId.MAINNET],
@@ -60,6 +60,10 @@ const BASES_TO_CHECK_TRADES_AGAINST = {
         UNI_ARBITRUM_RINKEBY,
         USDT_ARBITRUM_RINKEBY,
     ],
+    [ChainId.ARBITRUM_GOERLI]: [
+        WRAPPED_NATIVE_CURRENCY[ChainId.ARBITRUM_GOERLI],
+        USDC_ARBITRUM_GOERLI,
+    ],
     [ChainId.OPTIMISTIC_KOVAN]: [
         WRAPPED_NATIVE_CURRENCY[ChainId.OPTIMISTIC_KOVAN],
         DAI_OPTIMISTIC_KOVAN,
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/alpha-router.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/alpha-router.js
index 17eefc9..ae07c6d 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/alpha-router.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/alpha-router.js
@@ -166,7 +166,8 @@ export class AlphaRouter {
                 optimismGasDataProvider !== null && optimismGasDataProvider !== void 0 ? optimismGasDataProvider : new OptimismGasDataProvider(chainId, this.multicall2Provider);
         }
         if (chainId == ChainId.ARBITRUM_ONE ||
-            chainId == ChainId.ARBITRUM_RINKEBY) {
+            chainId == ChainId.ARBITRUM_RINKEBY ||
+            chainId == ChainId.ARBITRUM_GOERLI) {
             this.l2GasDataProvider =
                 arbitrumGasDataProvider !== null && arbitrumGasDataProvider !== void 0 ? arbitrumGasDataProvider : new ArbitrumGasDataProvider(chainId, this.provider);
         }
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/config.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/config.js
index 657f665..a3af23a 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/config.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/config.js
@@ -32,6 +32,7 @@ export const DEFAULT_ROUTING_CONFIG_BY_CHAIN = (chainId) => {
         // have to adjust the routing config so we explore fewer routes.
         case ChainId.ARBITRUM_ONE:
         case ChainId.ARBITRUM_RINKEBY:
+        case ChainId.ARBITRUM_GOERLI:
         case ChainId.CELO:
         case ChainId.CELO_ALFAJORES:
             return {
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/get-candidate-pools.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/get-candidate-pools.js
index a8fcdc7..7091ad1 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/get-candidate-pools.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/get-candidate-pools.js
@@ -2,7 +2,7 @@ import { Protocol } from '@uniswap/router-sdk';
 import { TradeType } from '@uniswap/sdk-core';
 import { FeeAmount } from '@uniswap/v3-sdk';
 import _ from 'lodash';
-import { CELO, CELO_ALFAJORES, CEUR_CELO, CEUR_CELO_ALFAJORES, CUSD_CELO, CUSD_CELO_ALFAJORES, DAI_ARBITRUM, DAI_ARBITRUM_RINKEBY, DAI_MAINNET, DAI_MOONBEAM, DAI_OPTIMISM, DAI_OPTIMISTIC_KOVAN, DAI_POLYGON_MUMBAI, DAI_RINKEBY_1, DAI_RINKEBY_2, FEI_MAINNET, USDC_ARBITRUM, USDC_ETHEREUM_GNOSIS, USDC_MAINNET, USDC_MOONBEAM, USDC_OPTIMISM, USDC_OPTIMISTIC_KOVAN, USDC_POLYGON, USDT_ARBITRUM, USDT_ARBITRUM_RINKEBY, USDT_MAINNET, USDT_OPTIMISM, USDT_OPTIMISTIC_KOVAN, WBTC_ARBITRUM, WBTC_GNOSIS, WBTC_MAINNET, WBTC_MOONBEAM, WBTC_OPTIMISM, WBTC_OPTIMISTIC_KOVAN, WGLMR_MOONBEAM, WMATIC_POLYGON, WMATIC_POLYGON_MUMBAI, WXDAI_GNOSIS, } from '../../../providers/token-provider';
+import { CELO, CELO_ALFAJORES, CEUR_CELO, CEUR_CELO_ALFAJORES, CUSD_CELO, CUSD_CELO_ALFAJORES, DAI_ARBITRUM, DAI_ARBITRUM_RINKEBY, DAI_MAINNET, DAI_MOONBEAM, DAI_OPTIMISM, DAI_OPTIMISTIC_KOVAN, DAI_POLYGON_MUMBAI, DAI_RINKEBY_1, DAI_RINKEBY_2, FEI_MAINNET, USDC_ARBITRUM, USDC_ARBITRUM_GOERLI, USDC_ETHEREUM_GNOSIS, USDC_MAINNET, USDC_MOONBEAM, USDC_OPTIMISM, USDC_OPTIMISTIC_KOVAN, USDC_POLYGON, USDT_ARBITRUM, USDT_ARBITRUM_RINKEBY, USDT_MAINNET, USDT_OPTIMISM, USDT_OPTIMISTIC_KOVAN, WBTC_ARBITRUM, WBTC_GNOSIS, WBTC_MAINNET, WBTC_MOONBEAM, WBTC_OPTIMISM, WBTC_OPTIMISTIC_KOVAN, WGLMR_MOONBEAM, WMATIC_POLYGON, WMATIC_POLYGON_MUMBAI, WXDAI_GNOSIS, } from '../../../providers/token-provider';
 import { ChainId, WRAPPED_NATIVE_CURRENCY } from '../../../util';
 import { parseFeeAmount, unparseFeeAmount } from '../../../util/amounts';
 import { log } from '../../../util/log';
@@ -36,6 +36,7 @@ const baseTokensByChain = {
         USDT_ARBITRUM,
     ],
     [ChainId.ARBITRUM_RINKEBY]: [DAI_ARBITRUM_RINKEBY, USDT_ARBITRUM_RINKEBY],
+    [ChainId.ARBITRUM_GOERLI]: [USDC_ARBITRUM_GOERLI],
     [ChainId.POLYGON]: [USDC_POLYGON, WMATIC_POLYGON],
     [ChainId.POLYGON_MUMBAI]: [DAI_POLYGON_MUMBAI, WMATIC_POLYGON_MUMBAI],
     [ChainId.CELO]: [CUSD_CELO, CEUR_CELO, CELO],
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/gas-model.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/gas-model.js
index 0a5954a..bea5216 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/gas-model.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/gas-model.js
@@ -1,4 +1,4 @@
-import { CUSD_CELO, CUSD_CELO_ALFAJORES, DAI_ARBITRUM, DAI_ARBITRUM_RINKEBY, DAI_GÖRLI, DAI_KOVAN, DAI_MAINNET, DAI_OPTIMISM, DAI_OPTIMISTIC_KOVAN, DAI_POLYGON_MUMBAI, DAI_RINKEBY_1, DAI_RINKEBY_2, DAI_ROPSTEN, USDC_ARBITRUM, USDC_ETHEREUM_GNOSIS, USDC_GÖRLI, USDC_KOVAN, USDC_MAINNET, USDC_MOONBEAM, USDC_OPTIMISM, USDC_OPTIMISTIC_KOVAN, USDC_POLYGON, USDC_ROPSTEN, USDT_ARBITRUM, USDT_ARBITRUM_RINKEBY, USDT_GÖRLI, USDT_KOVAN, USDT_MAINNET, USDT_OPTIMISM, USDT_OPTIMISTIC_KOVAN, USDT_ROPSTEN, WBTC_GÖRLI, } from '../../../providers/token-provider';
+import { CUSD_CELO, CUSD_CELO_ALFAJORES, DAI_ARBITRUM, DAI_ARBITRUM_RINKEBY, DAI_GÖRLI, DAI_KOVAN, DAI_MAINNET, DAI_OPTIMISM, DAI_OPTIMISTIC_KOVAN, DAI_POLYGON_MUMBAI, DAI_RINKEBY_1, DAI_RINKEBY_2, DAI_ROPSTEN, USDC_ARBITRUM, USDC_ARBITRUM_GOERLI, USDC_ETHEREUM_GNOSIS, USDC_GÖRLI, USDC_KOVAN, USDC_MAINNET, USDC_MOONBEAM, USDC_OPTIMISM, USDC_OPTIMISTIC_KOVAN, USDC_POLYGON, USDC_ROPSTEN, USDT_ARBITRUM, USDT_ARBITRUM_RINKEBY, USDT_GÖRLI, USDT_KOVAN, USDT_MAINNET, USDT_OPTIMISM, USDT_OPTIMISTIC_KOVAN, USDT_ROPSTEN, WBTC_GÖRLI, } from '../../../providers/token-provider';
 import { ChainId } from '../../../util/chains';
 export const usdGasTokensByChain = {
     [ChainId.MAINNET]: [DAI_MAINNET, USDC_MAINNET, USDT_MAINNET],
@@ -11,6 +11,7 @@ export const usdGasTokensByChain = {
         USDT_OPTIMISTIC_KOVAN,
     ],
     [ChainId.ARBITRUM_RINKEBY]: [DAI_ARBITRUM_RINKEBY, USDT_ARBITRUM_RINKEBY],
+    [ChainId.ARBITRUM_GOERLI]: [USDC_ARBITRUM_GOERLI],
     [ChainId.KOVAN]: [DAI_KOVAN, USDC_KOVAN, USDT_KOVAN],
     [ChainId.GÖRLI]: [DAI_GÖRLI, USDC_GÖRLI, USDT_GÖRLI, WBTC_GÖRLI],
     [ChainId.ROPSTEN]: [DAI_ROPSTEN, USDC_ROPSTEN, USDT_ROPSTEN],
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/gas-costs.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/gas-costs.js
index 677e545..a3a0667 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/gas-costs.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/gas-costs.js
@@ -15,6 +15,7 @@ export const BASE_SWAP_COST = (id) => {
             return BigNumber.from(2000);
         case ChainId.ARBITRUM_ONE:
         case ChainId.ARBITRUM_RINKEBY:
+        case ChainId.ARBITRUM_GOERLI:
             return BigNumber.from(5000);
         case ChainId.POLYGON:
         case ChainId.POLYGON_MUMBAI:
@@ -42,6 +43,7 @@ export const COST_PER_INIT_TICK = (id) => {
             return BigNumber.from(31000);
         case ChainId.ARBITRUM_ONE:
         case ChainId.ARBITRUM_RINKEBY:
+        case ChainId.ARBITRUM_GOERLI:
             return BigNumber.from(31000);
         case ChainId.POLYGON:
         case ChainId.POLYGON_MUMBAI:
@@ -67,6 +69,7 @@ export const COST_PER_HOP = (id) => {
             return BigNumber.from(80000);
         case ChainId.ARBITRUM_ONE:
         case ChainId.ARBITRUM_RINKEBY:
+        case ChainId.ARBITRUM_GOERLI:
             return BigNumber.from(80000);
         case ChainId.POLYGON:
         case ChainId.POLYGON_MUMBAI:
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.js
index dad219a..844cc8b 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.js
@@ -48,7 +48,8 @@ export class V3HeuristicGasModelFactory extends IOnChainGasModelFactory {
                 [l1Used, l1FeeInWei] = this.calculateOptimismToL1SecurityFee(route, swapOptions, l2GasData);
             }
             else if (chainId == ChainId.ARBITRUM_ONE ||
-                chainId == ChainId.ARBITRUM_RINKEBY) {
+                chainId == ChainId.ARBITRUM_RINKEBY ||
+                chainId == ChainId.ARBITRUM_GOERLI) {
                 [l1Used, l1FeeInWei] = this.calculateArbitrumToL1SecurityFee(route, swapOptions, l2GasData);
             }
             // wrap fee to native currency
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/legacy-router/bases.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/legacy-router/bases.d.ts
index c2f610e..6e35597 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/legacy-router/bases.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/legacy-router/bases.d.ts
@@ -33,6 +33,9 @@ export declare const ADDITIONAL_BASES: (tokenProvider: ITokenProvider) => Promis
     421611?: {
         [tokenAddress: string]: Token[];
     } | undefined;
+    421613?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
     137?: {
         [tokenAddress: string]: Token[];
     } | undefined;
@@ -84,6 +87,9 @@ export declare const CUSTOM_BASES: (tokenProvider: ITokenProvider) => Promise<{
     421611?: {
         [tokenAddress: string]: Token[];
     } | undefined;
+    421613?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
     137?: {
         [tokenAddress: string]: Token[];
     } | undefined;
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/legacy-router/bases.js b/node_modules/@uniswap/smart-order-router/build/module/routers/legacy-router/bases.js
index acda7b0..ca99d16 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/legacy-router/bases.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/legacy-router/bases.js
@@ -21,6 +21,9 @@ export const BASES_TO_CHECK_TRADES_AGAINST = (_tokenProvider) => {
         [ChainId.ARBITRUM_RINKEBY]: [
             WRAPPED_NATIVE_CURRENCY[ChainId.ARBITRUM_RINKEBY],
         ],
+        [ChainId.ARBITRUM_GOERLI]: [
+            WRAPPED_NATIVE_CURRENCY[ChainId.ARBITRUM_GOERLI],
+        ],
         [ChainId.POLYGON]: [WMATIC_POLYGON],
         [ChainId.POLYGON_MUMBAI]: [WMATIC_POLYGON_MUMBAI],
         [ChainId.CELO]: [WRAPPED_NATIVE_CURRENCY[ChainId.CELO]],
diff --git a/node_modules/@uniswap/smart-order-router/build/module/util/addresses.js b/node_modules/@uniswap/smart-order-router/build/module/util/addresses.js
index 053caf3..3c80434 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/util/addresses.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/util/addresses.js
@@ -4,16 +4,21 @@ import { ChainId, NETWORKS_WITH_SAME_UNISWAP_ADDRESSES } from './chains';
 const CELO_V3_CORE_FACTORY_ADDRESSES = '0xAfE208a311B21f13EF87E33A90049fC17A7acDEc';
 const CELO_QUOTER_ADDRESSES = '0x82825d0554fA07f7FC52Ab63c961F330fdEFa8E8';
 const CELO_MULTICALL_ADDRESS = '0x633987602DE5C4F337e3DbF265303A1080324204';
+const ARBITRUM_GOERLI_V3_CORE_FACTORY_ADDRESSES = '0x4893376342d5D7b3e31d4184c08b265e5aB2A3f6'
+const ARBITRUM_GOERLI_QUOTER_ADDRESSES = '0x1dd92b83591781D0C6d98d07391eea4b9a6008FA'
+const ARBITRUM_GOERLI_MULTICALL_ADDRESS = '0x8260CB40247290317a4c062F3542622367F206Ee'
 export const V3_CORE_FACTORY_ADDRESSES = {
     ...constructSameAddressMap(FACTORY_ADDRESS),
     [ChainId.CELO]: CELO_V3_CORE_FACTORY_ADDRESSES,
     [ChainId.CELO_ALFAJORES]: CELO_V3_CORE_FACTORY_ADDRESSES,
+    [ChainId.ARBITRUM_GOERLI]: ARBITRUM_GOERLI_V3_CORE_FACTORY_ADDRESSES,
     // TODO: Gnosis + Moonbeam contracts to be deployed
 };
 export const QUOTER_V2_ADDRESSES = {
     ...constructSameAddressMap('0x61fFE014bA17989E743c5F6cB21bF9697530B21e'),
     [ChainId.CELO]: CELO_QUOTER_ADDRESSES,
     [ChainId.CELO_ALFAJORES]: CELO_QUOTER_ADDRESSES,
+    [ChainId.ARBITRUM_GOERLI]: ARBITRUM_GOERLI_QUOTER_ADDRESSES,
     // TODO: Gnosis + Moonbeam contracts to be deployed
 };
 export const MIXED_ROUTE_QUOTER_V1_ADDRESSES = {
@@ -26,6 +31,7 @@ export const UNISWAP_MULTICALL_ADDRESSES = {
     ...constructSameAddressMap('0x1F98415757620B543A52E61c46B32eB19261F984'),
     [ChainId.CELO]: CELO_MULTICALL_ADDRESS,
     [ChainId.CELO_ALFAJORES]: CELO_MULTICALL_ADDRESS,
+    [ChainId.ARBITRUM_GOERLI]: ARBITRUM_GOERLI_MULTICALL_ADDRESS,
     // TODO: Gnosis + Moonbeam contracts to be deployed
 };
 export const OVM_GASPRICE_ADDRESS = '0x420000000000000000000000000000000000000F';
@@ -51,5 +57,6 @@ export const WETH9 = {
     [ChainId.OPTIMISTIC_KOVAN]: new Token(ChainId.OPTIMISTIC_KOVAN, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
     [ChainId.ARBITRUM_ONE]: new Token(ChainId.ARBITRUM_ONE, '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1', 18, 'WETH', 'Wrapped Ether'),
     [ChainId.ARBITRUM_RINKEBY]: new Token(ChainId.ARBITRUM_RINKEBY, '0xB47e6A5f8b33b3F17603C83a0535A9dcD7E32681', 18, 'WETH', 'Wrapped Ether'),
+    [ChainId.ARBITRUM_GOERLI]: new Token(ChainId.ARBITRUM_GOERLI, '0xe39Ab88f8A4777030A534146A9Ca3B52bd5D43A3', 18, 'WETH', 'Wrapped Ether'),
 };
 //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkcmVzc2VzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWwvYWRkcmVzc2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUMxQyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDbEQsT0FBTyxFQUFFLE9BQU8sRUFBRSxvQ0FBb0MsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUV6RSxNQUFNLDhCQUE4QixHQUNsQyw0Q0FBNEMsQ0FBQztBQUMvQyxNQUFNLHFCQUFxQixHQUFHLDRDQUE0QyxDQUFDO0FBQzNFLE1BQU0sc0JBQXNCLEdBQUcsNENBQTRDLENBQUM7QUFFNUUsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQWU7SUFDbkQsR0FBRyx1QkFBdUIsQ0FBQyxlQUFlLENBQUM7SUFDM0MsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsOEJBQThCO0lBQzlDLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxFQUFFLDhCQUE4QjtJQUV4RCxtREFBbUQ7Q0FDcEQsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFlO0lBQzdDLEdBQUcsdUJBQXVCLENBQUMsNENBQTRDLENBQUM7SUFDeEUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUscUJBQXFCO0lBQ3JDLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxFQUFFLHFCQUFxQjtJQUUvQyxtREFBbUQ7Q0FDcEQsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLCtCQUErQixHQUFlO0lBQ3pELENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLDRDQUE0QztJQUMvRCxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSw0Q0FBNEM7SUFDL0QsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsNENBQTRDO0lBQy9ELENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFLDRDQUE0QztDQUM5RCxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sMkJBQTJCLEdBQWU7SUFDckQsR0FBRyx1QkFBdUIsQ0FBQyw0Q0FBNEMsQ0FBQztJQUN4RSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxzQkFBc0I7SUFDdEMsQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLEVBQUUsc0JBQXNCO0lBRWhELG1EQUFtRDtDQUNwRCxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQy9CLDRDQUE0QyxDQUFDO0FBQy9DLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLDRDQUE0QyxDQUFDO0FBRWhGLE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLDRDQUE0QyxDQUFDO0FBQzlFLE1BQU0sQ0FBQyxNQUFNLG9DQUFvQyxHQUMvQyw0Q0FBNEMsQ0FBQztBQUMvQyxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyw0Q0FBNEMsQ0FBQztBQUNoRixNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyw0Q0FBNEMsQ0FBQztBQUNoRixNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRyw0Q0FBNEMsQ0FBQztBQUkvRSxNQUFNLFVBQVUsdUJBQXVCLENBQ3JDLE9BQVUsRUFDVixxQkFBZ0MsRUFBRTtJQUVsQyxPQUFPLG9DQUFvQyxDQUFDLE1BQU0sQ0FDaEQsa0JBQWtCLENBQ25CLENBQUMsTUFBTSxDQUVMLENBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxFQUFFO1FBQ25CLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxPQUFPLENBQUM7UUFDeEIsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDVCxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sS0FBSyxHQVVkO0lBQ0YsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsSUFBSSxLQUFLLENBQzFCLE9BQU8sQ0FBQyxPQUFPLEVBQ2YsNENBQTRDLEVBQzVDLEVBQUUsRUFDRixNQUFNLEVBQ04sZUFBZSxDQUNoQjtJQUNELENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLElBQUksS0FBSyxDQUMxQixPQUFPLENBQUMsT0FBTyxFQUNmLDRDQUE0QyxFQUM1QyxFQUFFLEVBQ0YsTUFBTSxFQUNOLGVBQWUsQ0FDaEI7SUFDRCxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxJQUFJLEtBQUssQ0FDMUIsT0FBTyxDQUFDLE9BQU8sRUFDZiw0Q0FBNEMsRUFDNUMsRUFBRSxFQUNGLE1BQU0sRUFDTixlQUFlLENBQ2hCO0lBQ0QsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUUsSUFBSSxLQUFLLENBQ3hCLE9BQU8sQ0FBQyxLQUFLLEVBQ2IsNENBQTRDLEVBQzVDLEVBQUUsRUFDRixNQUFNLEVBQ04sZUFBZSxDQUNoQjtJQUNELENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFLElBQUksS0FBSyxDQUN4QixPQUFPLENBQUMsS0FBSyxFQUNiLDRDQUE0QyxFQUM1QyxFQUFFLEVBQ0YsTUFBTSxFQUNOLGVBQWUsQ0FDaEI7SUFDRCxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFBRSxJQUFJLEtBQUssQ0FDM0IsT0FBTyxDQUFDLFFBQVEsRUFDaEIsNENBQTRDLEVBQzVDLEVBQUUsRUFDRixNQUFNLEVBQ04sZUFBZSxDQUNoQjtJQUNELENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLEVBQUUsSUFBSSxLQUFLLENBQ25DLE9BQU8sQ0FBQyxnQkFBZ0IsRUFDeEIsNENBQTRDLEVBQzVDLEVBQUUsRUFDRixNQUFNLEVBQ04sZUFBZSxDQUNoQjtJQUNELENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxFQUFFLElBQUksS0FBSyxDQUMvQixPQUFPLENBQUMsWUFBWSxFQUNwQiw0Q0FBNEMsRUFDNUMsRUFBRSxFQUNGLE1BQU0sRUFDTixlQUFlLENBQ2hCO0lBQ0QsQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxJQUFJLEtBQUssQ0FDbkMsT0FBTyxDQUFDLGdCQUFnQixFQUN4Qiw0Q0FBNEMsRUFDNUMsRUFBRSxFQUNGLE1BQU0sRUFDTixlQUFlLENBQ2hCO0NBQ0YsQ0FBQyJ9
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/util/chains.d.ts b/node_modules/@uniswap/smart-order-router/build/module/util/chains.d.ts
index 3180e68..3420b0d 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/util/chains.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/util/chains.d.ts
@@ -9,6 +9,7 @@ export declare enum ChainId {
     OPTIMISTIC_KOVAN = 69,
     ARBITRUM_ONE = 42161,
     ARBITRUM_RINKEBY = 421611,
+    ARBITRUM_GOERLI = 421613,
     POLYGON = 137,
     POLYGON_MUMBAI = 80001,
     CELO = 42220,
@@ -31,6 +32,7 @@ export declare enum ChainName {
     OPTIMISTIC_KOVAN = "optimism-kovan",
     ARBITRUM_ONE = "arbitrum-mainnet",
     ARBITRUM_RINKEBY = "arbitrum-rinkeby",
+    ARBITRUM_GOERLI = "arbitrum-goerli",
     POLYGON = "polygon-mainnet",
     POLYGON_MUMBAI = "polygon-mumbai",
     CELO = "celo-mainnet",
diff --git a/node_modules/@uniswap/smart-order-router/build/module/util/chains.js b/node_modules/@uniswap/smart-order-router/build/module/util/chains.js
index 1ead09b..f7e0631 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/util/chains.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/util/chains.js
@@ -10,6 +10,7 @@ export var ChainId;
     ChainId[ChainId["OPTIMISTIC_KOVAN"] = 69] = "OPTIMISTIC_KOVAN";
     ChainId[ChainId["ARBITRUM_ONE"] = 42161] = "ARBITRUM_ONE";
     ChainId[ChainId["ARBITRUM_RINKEBY"] = 421611] = "ARBITRUM_RINKEBY";
+    ChainId[ChainId["ARBITRUM_GOERLI"] = 421613] = "ARBITRUM_GOERLI";
     ChainId[ChainId["POLYGON"] = 137] = "POLYGON";
     ChainId[ChainId["POLYGON_MUMBAI"] = 80001] = "POLYGON_MUMBAI";
     ChainId[ChainId["CELO"] = 42220] = "CELO";
@@ -27,6 +28,7 @@ export const SUPPORTED_CHAINS = [
     ChainId.OPTIMISTIC_KOVAN,
     ChainId.ARBITRUM_ONE,
     ChainId.ARBITRUM_RINKEBY,
+    ChainId.ARBITRUM_GOERLI,
     ChainId.POLYGON,
     ChainId.POLYGON_MUMBAI,
     ChainId.GÖRLI,
@@ -46,6 +48,7 @@ export const HAS_L1_FEE = [
     ChainId.OPTIMISTIC_KOVAN,
     ChainId.ARBITRUM_ONE,
     ChainId.ARBITRUM_RINKEBY,
+    ChainId.ARBITRUM_GOERLI,
 ];
 export const NETWORKS_WITH_SAME_UNISWAP_ADDRESSES = [
     ChainId.MAINNET,
@@ -80,6 +83,8 @@ export const ID_TO_CHAIN_ID = (id) => {
             return ChainId.ARBITRUM_ONE;
         case 421611:
             return ChainId.ARBITRUM_RINKEBY;
+        case 421613:
+            return ChainId.ARBITRUM_GOERLI;
         case 137:
             return ChainId.POLYGON;
         case 80001:
@@ -107,6 +112,7 @@ export var ChainName;
     ChainName["OPTIMISTIC_KOVAN"] = "optimism-kovan";
     ChainName["ARBITRUM_ONE"] = "arbitrum-mainnet";
     ChainName["ARBITRUM_RINKEBY"] = "arbitrum-rinkeby";
+    ChainName["ARBITRUM_GOERLI"] = "arbitrum-goerli";
     ChainName["POLYGON"] = "polygon-mainnet";
     ChainName["POLYGON_MUMBAI"] = "polygon-mumbai";
     ChainName["CELO"] = "celo-mainnet";
@@ -169,6 +175,11 @@ export const NATIVE_NAMES_BY_ID = {
         'ETHER',
         '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
     ],
+    [ChainId.ARBITRUM_GOERLI]: [
+        'ETH',
+        'ETHER',
+        '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
+    ],
     [ChainId.POLYGON]: ['MATIC', '0x0000000000000000000000000000000000001010'],
     [ChainId.POLYGON_MUMBAI]: [
         'MATIC',
@@ -189,6 +200,7 @@ export const NATIVE_CURRENCY = {
     [ChainId.OPTIMISTIC_KOVAN]: NativeCurrencyName.ETHER,
     [ChainId.ARBITRUM_ONE]: NativeCurrencyName.ETHER,
     [ChainId.ARBITRUM_RINKEBY]: NativeCurrencyName.ETHER,
+    [ChainId.ARBITRUM_GOERLI]: NativeCurrencyName.ETHER,
     [ChainId.POLYGON]: NativeCurrencyName.MATIC,
     [ChainId.POLYGON_MUMBAI]: NativeCurrencyName.MATIC,
     [ChainId.CELO]: NativeCurrencyName.CELO,
@@ -216,6 +228,8 @@ export const ID_TO_NETWORK_NAME = (id) => {
             return ChainName.ARBITRUM_ONE;
         case 421611:
             return ChainName.ARBITRUM_RINKEBY;
+        case 421613:
+            return ChainName.ARBITRUM_GOERLI;
         case 137:
             return ChainName.POLYGON;
         case 80001:
@@ -253,6 +267,8 @@ export const ID_TO_PROVIDER = (id) => {
             return process.env.JSON_RPC_PROVIDER_ARBITRUM_ONE;
         case ChainId.ARBITRUM_RINKEBY:
             return process.env.JSON_RPC_PROVIDER_ARBITRUM_RINKEBY;
+        case ChainId.ARBITRUM_GOERLI:
+            return process.env.JSON_RPC_PROVIDER_ARBITRUM_GOERLI;
         case ChainId.POLYGON:
             return process.env.JSON_RPC_PROVIDER_POLYGON;
         case ChainId.POLYGON_MUMBAI:
@@ -275,6 +291,7 @@ export const WRAPPED_NATIVE_CURRENCY = {
     [ChainId.OPTIMISTIC_KOVAN]: new Token(ChainId.OPTIMISTIC_KOVAN, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
     [ChainId.ARBITRUM_ONE]: new Token(ChainId.ARBITRUM_ONE, '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1', 18, 'WETH', 'Wrapped Ether'),
     [ChainId.ARBITRUM_RINKEBY]: new Token(ChainId.ARBITRUM_RINKEBY, '0xB47e6A5f8b33b3F17603C83a0535A9dcD7E32681', 18, 'WETH', 'Wrapped Ether'),
+    [ChainId.ARBITRUM_GOERLI]: new Token(ChainId.ARBITRUM_GOERLI, '0xe39Ab88f8A4777030A534146A9Ca3B52bd5D43A3', 18, 'WETH', 'Wrapped Ether'),
     [ChainId.POLYGON]: new Token(ChainId.POLYGON, '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', 18, 'WMATIC', 'Wrapped MATIC'),
     [ChainId.POLYGON_MUMBAI]: new Token(ChainId.POLYGON_MUMBAI, '0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', 18, 'WMATIC', 'Wrapped MATIC'),
     // The Celo native currency 'CELO' implements the erc-20 token standard
diff --git a/node_modules/@uniswap/smart-order-router/build/module/util/gas-factory-helpers.js b/node_modules/@uniswap/smart-order-router/build/module/util/gas-factory-helpers.js
index e245cdb..45d5125 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/util/gas-factory-helpers.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/util/gas-factory-helpers.js
@@ -155,7 +155,7 @@ export async function calculateGasUsed(chainId, route, simulatedGasUsed, v2PoolP
     const gasPriceWei = route.gasPriceWei;
     // calculate L2 to L1 security fee if relevant
     let l2toL1FeeInWei = BigNumber.from(0);
-    if ([ChainId.ARBITRUM_ONE, ChainId.ARBITRUM_RINKEBY].includes(chainId)) {
+    if ([ChainId.ARBITRUM_ONE, ChainId.ARBITRUM_RINKEBY, ChainId.ARBITRUM_GOERLI].includes(chainId)) {
         l2toL1FeeInWei = calculateArbitrumToL1FeeFromCalldata(route.methodParameters.calldata, l2GasData)[1];
     }
     else if ([ChainId.OPTIMISM, ChainId.OPTIMISTIC_KOVAN].includes(chainId)) {
