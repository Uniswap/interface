{
  "$schema": "https://turbo.build/schema.json",
  "pipeline": {
    "prepare": {
      "inputs": [
        "package.json"
      ]
    },
    "@uniswap/interface#prepare": {
      "inputs": [
        "package.json"
      ],
      "dependsOn": [
        "ajv",
        "graphql:generate",
        "^prepare"
      ]
    },
    "uniswap#prepare": {
      "inputs": [
        "package.json"
      ],
      "dependsOn": [
        "contracts",
        "i18n:generate",
        "graphql:generate",
        "tradingapi:generate",
        "^prepare"
      ]
    },
    "uniswap#tradingapi:generate:openapi": {
      "inputs": [
        "src/data/tradingApi/api.json"
      ],
      "outputs": [
        "src/data/tradingApi/__generated__/**"
      ]
    },
    "uniswap#tradingapi:add-local-types": {
      "inputs": [
        "src/data/tradingApi/modifyTradingApiTypes.mts",
        "src/data/tradingApi/__generated__/models/*.ts"
      ],
      "outputs": [
        "src/data/tradingApi/__generated__/models/*.ts"
      ],
      "dependsOn": [
        "uniswap#tradingapi:generate:openapi"
      ]
    },
    "uniswap#tradingapi:generate": {
      "dependsOn": [
        "uniswap#tradingapi:add-local-types"
      ]
    },
    "uniswap#contracts": {
      "inputs": [
        "package.json"
      ],
      "outputs": [
        "src/abis/**"
      ]
    },
    "@uniswap/interface#ajv": {
      "inputs": [
        "scripts/compile-ajv-validators.js",
        "package.json"
      ],
      "outputs": [
        "src/utils/__generated__/**"
      ]
    },
    "uniswap#i18n:generate": {
      "inputs": [
        "src/locales.ts",
        "src/i18n/locales/source/**"
      ],
      "outputs": [
        "src/i18n/locales/@types/**"
      ]
    },
    "graphql:schema": {
      "env": [
        "REACT_APP_AWS_API_ENDPOINT",
        "scripts/**"
      ],
      "inputs": [
        ".env.production",
        "graphql.*.ts"
      ],
      "outputs": [
        "schema.graphql"
      ],
      "dependsOn": [],
      "cache": false
    },
    "graphql:generate": {
      "inputs": [
        "codegen.ts",
        "src/**/schema.graphql",
        "src/graphql/**",
        "src/data/**/*.graphql"
      ],
      "outputs": [
        "src/**/types-and-hooks.ts",
        "data/__generated__/**",
        "graphql/__generated__/**"
      ],
      "dependsOn": [],
      "cache": false
    },
    "typecheck": {
      "inputs": [
        "src/**.ts",
        "src/**.tsx"
      ],
      "outputs": [],
      "dependsOn": [
        "prepare",
        "^typecheck",
        "^build"
      ]
    },
    "check:circular": {},
    "check:deps:usage": {},
    "format": {
      "inputs": [
        "**/*.ts",
        "**/*.tsx",
        "**/*.js"
      ]
    },
    "lint": {
      "dependsOn": [
        "typecheck",
        "^lint"
      ]
    },
    "lint:fix": {
      "dependsOn": [
        "typecheck",
        "^lint:fix"
      ]
    },
    "test": {
      "dependsOn": [
        "^prepare"
      ]
    },
    "test:set1": {
      "dependsOn": [
        "^prepare"
      ]
    },
    "test:set2": {
      "dependsOn": [
        "^prepare"
      ]
    },
    "test:set3": {
      "dependsOn": [
        "^prepare"
      ]
    },
    "test:set4": {
      "dependsOn": [
        "^prepare"
      ]
    },
    "start": {
      "cache": false,
      "persistent": true,
      "dependsOn": [
        "prepare"
      ]
    },
    "snapshots": {
      "dependsOn": [
        "prepare",
        "typecheck",
        "lint"
      ]
    },
    "build:production": {
      "inputs": [
        "yarn.lock",
        "**/package.json",
        "src/**/*"
      ],
      "outputs": [
        "**/build/**"
      ],
      "dependsOn": [
        "prepare",
        "build"
      ]
    },
    "build": {
      "inputs": [
        "yarn.lock",
        "**/package.json",
        "src/**.ts",
        "src/**.tsx"
      ],
      "outputs": [
        "**/dist/**",
        "./apps/next/.next/**",
        "**/types/**"
      ],
      "dependsOn": [
        "^build"
      ]
    },
    "storybook:test:standalone": {
      "cache": false,
      "dependsOn": [
        "^build"
      ]
    },
    "storybook:build": {
      "cache": false,
      "dependsOn": [
        "^build"
      ]
    }
  }
}
